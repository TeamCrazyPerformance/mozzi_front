{"version":3,"sources":["assets/image/logo.png","redux/auth/reducer.js","redux/reducers.js","redux/auth/actionTypes.js","helpers/fetchHelper.js","setting/jwtSetting.js","helpers/jwtHelper.js","redux/auth/api.js","helpers/userInformationHelper.js","redux/auth/saga.js","redux/sagas.js","redux/store.js","redux/auth/actions.js","redux/checkSignIn.js","helpers/scrollOnTopHelper.js","components/FlexBox/FlexBox.js","components/SignInForm/SignInForm.js","components/Logo/Logo.js","components/LoadingSpinner/LoadingSpinner.js","containers/SignIn/SignIn.js","components/InputBoxes/IdentityValueInputBox/IdentityValueInputBox.js","components/InputBoxes/PasswordValueInputBox/PasswordValueInputBox.js","components/InputBoxes/PasswordConfirmValueInputBox/PasswordConfirmValueInputBox.js","components/InputBoxes/NameValueInputBox/NameValueInputBox.js","components/InputBoxes/BirthdayValueInputBox/BirthdayValueInputBox.js","components/InputBoxes/NickNameValueInputBox/NickNameValueInputBox.js","components/InputBoxes/SchoolValueInputBox/SchoolValueInputBox.js","components/InputBoxes/StudentNumberValueInputBox/StudentNumberValueInputBox.js","components/InputBoxes/MajorValueInputBox/MajorValueInputBox.js","components/InputBoxes/EmailValueInputBox/EmailValueInputBox.js","components/InputBoxes/PhoneNumberValueInputBox/PhoneNumberValueInputBox.js","components/SignUpForm/SignUpForm.js","containers/Pages/ErrorPage/ErrorPage.js","helpers/fakeFetchHelper.js","containers/SignUp/SignUpApi.js","containers/SignUp/SignUp.js","components/DrawerList/DrawerList.js","components/Header/Header.js","containers/Main/Main.js","components/ProjectsTable/ProjectsTable.js","containers/Project/Projects/projectsApi.js","containers/Project/Projects/Projects.js","components/InputBoxes/ContentValueInputBox/ContentValueInputBox.js","components/ProjectEditForm/ProjectEditForm.js","containers/Project/ProjectEdit/projectEditApi.js","containers/Project/ProjectEdit/ProjectEdit.js","components/ProjectInformation/ProjectInformation.js","components/ProjectIssueList/ProjectIssueList.js","containers/Project/Project/projectApi.js","containers/Project/Project/Project.js","components/ExamsTable/ExamsTable.js","containers/Exam/Exams/examsApi.js","containers/Exam/Exams/Exams.js","components/InputBoxes/YearValueInputBox/YearValueInputBox.js","components/InputBoxes/GradeValueInputBox/GradeValueInputBox.js","components/InputBoxes/SemesterValueInputBox/SemesterValueInputBox.js","components/InputBoxes/TermValueInputBox/TermValueInputBox.js","components/ExamEditForm/ExamEditForm.js","containers/Exam/ExamEdit/ExamEditApi.js","containers/Exam/ExamEdit/ExamEdit.js","components/ExamInformationList/ExamInformationList.js","containers/Exam/Exam/ExamApi.js","containers/Exam/Exam/Exam.js","components/JoinRequestsTable/JoinRequestsTable.js","containers/Admin/JoinRequests/joinRequestsApi.js","containers/Admin/JoinRequests/JoinRequests.js","components/UsersTable/UsersTable.js","containers/Admin/Users/usersApi.js","containers/Admin/Users/Users.js","components/UserInformationList/UserInformationList.js","containers/UserInformation/UserInformation/UserInformationApi.js","containers/UserInformation/UserInformation/UserInformation.js","components/UserInformationEditForm/UserInformationEditForm.js","components/UserPasswordEditForm/UserPasswordEditForm.js","components/UserWithdrawalForm/UserWithdrawalForm.js","containers/UserInformation/UserInformationEdit/UserInformationEditApi.js","containers/UserInformation/UserInformationEdit/UserInformationEdit.js","containers/Pages/404Page/404Page.js","router.js","App.js","index.js"],"names":["module","exports","authInitialState","isSignIn","role","userId","loadingState","idPasswordError","auth","state","action","type","base","method","url","data","fetch","headers","sessionStorage","getItem","Accept","Authorization","concat","body","JSON","stringify","then","response","ok","json","error","catch","fetchHelper","forEach","bind","Object","create","setJwt","jwtToken","setItem","clearJwt","removeItem","getJwt","jwt","err","checkExpirity","token","decodedJwt","jwtDecode","currentTime","Date","getTime","exp","success","timeoutError","postSignIn","id","password","Promise","resolve","reject","clearUserId","getUserId","authSaga","takeEvery","postSignInSaga","put","call","AuthApi","getResult","jwtHelper","signOut","signOutSaga","userInformationHelper","tokenRefresh","post","checkAuthorization","checkAuthorizationSaga","isAuthorization","all","fork","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","store","createStore","combineReducers","reducers","router","routerReducer","compose","applyMiddleware","run","checkSignIn","dispatch","authActions","withRouter","history","useEffect","unlisten","listen","window","scrollTo","FlexBox","props","wrap","column","align","justify","maxHeight","createWrapper","children","flexBoxClassNames","classNames","changePropsToClassName","className","defaultProps","SignInForm","handleSubmit","identityValue","handleIdentityValue","passwordValue","handlePasswordVaule","signupUrl","useState","identityValueIsEmpty","setIdentityValueIsEmpty","passwordValueIsEmpty","setPasswordValueIsEmpty","onSubmit","event","preventDefault","valueIsEmpty","validationCheck","TextField","label","value","onChange","undefined","helperText","fullWidth","Button","color","component","Link","to","variant","Logo","logoClassNames","size","spin","src","LogoImage","alt","LoadingSpinnerStyles","makeStyles","loadingStateWrapperClassName","height","LoadingSpinner","CircularProgress","connect","bindActionCreators","setIdentityValue","setPasswordValue","target","IdentityValueInputBoxStyles","inputBoxClassName","paddingBottom","IdentityValueInputBox","setValue","valueErrMessage","setValueErrMessage","identityValueDuplicateCheck","identityValueCheck","targetValue","a","test","PasswordValueInputBoxStyles","PasswordValueInputBox","passwordConfirmValue","setPasswordConfirmValueErrMessage","PasswordConfirmValueInputBoxStyles","PasswordConfirmValueInputBox","NameValueInputBoxStyles","NameValueInputBox","BirthdayValueInputBoxStyles","BirthdayValueInputBox","NickNameValueInputBoxStyles","NickNameValueInputBox","SchoolValueInputBoxStyles","SchoolValueInputBox","StudentNumberValueInputBoxStyles","StudentNumberValueInputBox","MajorValueInputBoxStyles","MajorValueInputBox","EmailValueInputBoxStyles","EmailValueInputBox","PhoneNumberValueInputBoxStyles","PhoneNumberValueInputBox","signUpFormStyles","signUpFormWrapperClassName","width","marginBottom","SignUpForm","signupFormData","identity","passwordConfirm","name","birthday","nickNmae","school","studentNumber","major","email","phoneNumber","Error","requestData","responseData","setTimeout","console","log","fakeFetchHelper","postSignUp","userInformation","apiCallStart","apiCallSuccess","apiCallFailure","apiResponse","putIdCheck","useable","SignUp","identityValueErrMessage","setIdentityValueErrMessage","passwordValueErrMessage","setPasswordValueErrMessage","setPasswordConfirmValue","passwordConfirmValueErrMessage","nameValue","setNameValue","nameValueErrMessage","setNameValueErrMessage","birthdayValue","setBirthdayValue","birthdayValueErrMessage","setBirthdayValueErrMessage","nickNameValue","setNickNameValue","nickNameValueErrMessage","setNickNameValueErrMessage","schoolValue","setSchoolValue","schoolValueErrMessage","setSchoolValueErrMessage","stdNumValue","setStdNumValue","stdNumValueErrMessage","setStdNumValueErrMessage","majorValue","setMajorValue","majorValueErrMessage","setMajorValueErrMessage","emailValue","setEmailValue","emailValueErrMessage","setEmailValueErrMessage","phoneNumValue","setPhoneNumValue","phoneNumValueErrMessage","setPhoneNumValueErrMessage","signUpApi","setLoadingState","setError","setLoadingStateAndErrorWhenApiCallStart","setLoadingStateAndErrorWhenApiCallSuccess","push","setLoadingStateAndErrorWhenApiCallFailure","ErrorPage","keys","key","nickName","drawerList","iconComponent","text","link","sort","drawerListStyles","drawerWrapperClassName","toolbarClassName","DrawerList","List","map","list","index","Divider","ListItem","button","ListItemIcon","ListItemText","primary","appBarStyles","theme","rootClassName","display","drawerClassName","breakpoints","up","flexShrink","appBarClassName","marginLeft","menuButtonClassName","marginRight","mixins","toolbar","drawerPaperClassName","contentClassName","flexGrow","padding","spacing","titleClassName","menuItemClassName","textDecoration","Header","drawerOpen","setDrawerOpen","anchorEl","setAnchorEl","accountCircleMenuOpen","Boolean","handleDrawerToggleOpen","handleAccountCircleMenuClose","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","onClick","Typography","noWrap","aria-owns","aria-haspopup","currentTarget","Menu","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","MenuItem","Hidden","implementation","mdUp","Drawer","anchor","ModalProps","keepMounted","mdDown","Main","rows","numeric","disablePadding","EnhancedTableHead","TableHead","TableRow","row","TableCell","ProjectsTableStyles","marginTop","tableClassName","minWidth","tableWrapperClassName","overflowX","tableRowClassName","cursor","ProjectsTable","page","count","rowsPerPage","handlePageChange","moveToProjectPage","emptyRows","length","Paper","Table","aria-labelledby","rowCount","TableBody","project","hover","projectId","projectName","projectLeader","style","colSpan","TablePagination","rowsPerPageOptions","onChangePage","backIconButtonProps","nextIconButtonProps","getProjects","projects","total","get","Projects","setProjects","setPage","setCount","setRowsPerPage","newPage","ContentValueInputBoxStyles","ContentValueInputBox","multiline","projectEditFormStyles","inputBoxWrapperClassName","buttonWrapperClassName","textAlign","ProjectEditForm","projectFormData","projectContent","getProject","projectIssues","issueId","issueName","issueContent","putProject","projectInformation","postProject","ProjectEdit","match","params","setProjectName","projectNameErrMessage","setProjectNameErrMessage","setProjectLeader","projectLeaderErrMessage","setProjectLeaderErrMessage","setProjectContent","projectContentErrMessage","setProjectContentErrMessage","setStateApiCallStart","setStateGetProjectInformationSuccess","setStateGetProjectInformationFailure","setStateHandleSubmitSuccess","setStateHandleSubmitFailure","projectEditApi","createProjectInformationRow","icon","dataName","projectInformationStyles","backgroundColor","palette","background","paper","deleteButtonClassName","ProjectInformation","selfIdentification","deleteProject","projectInformationEditPageUrl","tableRow","Description","AccessibilityNew","MenuBook","createTableRows","ListItemAvatar","Avatar","secondary","ProjectIssueList","deleteIssue","dense","element","ListItemSecondaryAction","edge","delete","myId","setProject","setProjectIssues","setSelfIdentification","projectApi","replace","examsTableRows","ExamsTableStyles","ExamsTable","moveToEaxmPage","exam","examId","year","professor","authorId","getExams","exams","grade","semester","term","content","Exams","setExams","YearValueInputBoxStyles","YearValueInputBox","GradeValueInputBoxStyles","GradeValueInputBox","SemesterValueInputBoxStyles","SemesterValueInputBox","TermValueInputBox","examEditFormWrapperClassName","examFormData","getExam","putExam","examInformation","postExam","ExamEdit","setYear","yearErrMessage","setYearErrMessage","setMajor","majorErrMessage","setMajorErrMessage","setGrade","gradeErrMessage","setGradeErrMessage","setSemester","semesterErrErrMessage","setSemesterErrMessage","setTerm","termErrMessage","setTermErrMessage","setName","nameErrMessage","setNameErrMessage","setProfessor","professorErrMessage","setProfessorErrMessage","setContent","contentErrMessage","setContentErrMessage","setStateGetExamInformationSuccess","setStateGetExamInformationFailure","examEditApi","ExamEditForm","ExamInformationList","deleteExam","examInformationEditPageUrl","CalendarToday","Computer","School","Today","TextFields","EmojiPeople","LibraryBooks","setExamInformation","ExamApi","JoinRequestTableStyles","buttonPaddingClassName","JoinRequestTable","moveToUserPage","joinRequestReview","student","tagName","stdNumber","Fab","currentPage","joinRequestType","getJoinRequests","users","postJoinRequestReview","JoinRequests","joinRequests","setJoinRequests","joinRequestsApi","JoinRequestsTable","UsersTableStyles","UsersTable","user","nickname","getUsers","phoneNum","Users","setUsers","createUserInformationRow","userInformationStyles","UserInformationList","userInformationEditPageUrl","AccountCircle","Face","InsertEmoticon","SupervisorAccount","Phone","Email","Cake","GroupAdd","createAt","getUser","allow","setUserInformation","userInformationEditFormStyles","userInformationEditFormWrapperClassName","UserInformationEditForm","userInformationData","userPasswordEditFormStyles","userPasswordEditFormWrapperClassName","UserPasswordEditForm","userPasswordData","currentPassword","newPassword","newPasswordConfirm","setNewPasswordConfirmErrMessage","userWithdrawalFormStyles","userWithdrawalButtonTitle","fontSize","userWithdrawalButtonWrapper","margin","UserWithdrawalForm","putUser","putUserPassword","curPassword","UserInformationEdit","setAllow","allowErrMessage","setAllowErrMessage","setEmail","eamilErrMessage","setEmailErrMessage","setNickName","nickNameErrMessage","setNickNameErrMessage","setPhoneNum","phoneNumErrMessage","setPhoneNumErrMessage","setCurrentPassword","currentPasswordErrMessage","setCurrentPasswordErrMessage","setNewPassword","newPasswordErrMessage","setNewPasswordErrMessage","setNewPasswordConfirm","newPasswordConfirmErrMessage","getUserInformation","userInformationEditApi","ErrorPage404","PublicRouter","exact","path","SignIn","PrivateRouter","Project","Exam","UserInformation","RouterSelectorComponent","location","pathname","pathName","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e53d6297.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6cfe430d.png\";","import * as AuthActions from \"./actionTypes\";\n\nconst authInitialState = {\n  isSignIn: false,\n  role: \"\",\n  userId: \"\",\n  loadingState: false,\n  idPasswordError: false\n};\n\nconst authReducer = (state = authInitialState, action) => {\n  switch (action.type) {\n    case AuthActions.POST_SIGN_IN_PENDING: {\n      return {\n        ...state,\n        loadingState: true,\n        idPasswordError: false\n      };\n    }\n    case AuthActions.UPDATE_USER_ID: {\n      return {\n        ...state,\n        userId: action.userId\n      };\n    }\n    case AuthActions.POST_SIGN_IN_SUCCESS_USER: {\n      return {\n        ...state,\n        isSignIn: true,\n        role: \"user\",\n        loadingState: false,\n        idPasswordError: false\n      };\n    }\n    case AuthActions.POST_SIGN_IN_SUCCESS_ADMIN: {\n      return {\n        ...state,\n        isSignIn: true,\n        role: \"admin\",\n        loadingState: false,\n        idPasswordError: false\n      };\n    }\n    case AuthActions.POST_SIGN_IN_FAILURE: {\n      return {\n        ...state,\n        isSignIn: false,\n        role: \"\",\n        userId: \"\",\n        loadingState: false,\n        idPasswordError: true\n      };\n    }\n    case AuthActions.SIGN_OUT_SUCCESS: {\n      return {\n        ...state,\n        isSignIn: false,\n        role: \"\",\n        userId: \"\",\n        loadingState: false,\n        idPasswordError: false\n      };\n    }\n    case AuthActions.SIGN_OUT_FAILURE: {\n      return {\n        ...state,\n        isSignIn: false,\n        role: \"\",\n        userId: \"\",\n        loadingState: false,\n        idPasswordError: false\n      };\n    }\n    case AuthActions.TOKEN_AUTH_ERROR: {\n      return {\n        ...state,\n        isSignIn: false,\n        role: \"\",\n        userId: \"\",\n        loadingState: false,\n        idPasswordError: false\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import auth from \"./auth/reducer\";\n\n// Combine all reducers.\nexport default {\n  auth\n};\n","export const POST_SIGN_IN_PENDING = \"POST_SIGN_IN_PENDING\";\nexport const POST_SIGN_IN = \"POST_SIGN_IN\";\nexport const UPDATE_USER_ID = \"UPDATE_USER_ID\";\nexport const POST_SIGN_IN_SUCCESS_USER = \"POST_SIGN_IN_SUCCESS_USER\";\nexport const POST_SIGN_IN_SUCCESS_ADMIN = \"POST_SIGN_IN_SUCCESS_ADMIN\";\nexport const POST_SIGN_IN_FAILURE = \"POST_SIGN_IN_FAILURE\";\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const SIGN_OUT_SUCCESS = \"SIGN_OUT_SUCCESS\";\nexport const SIGN_OUT_FAILURE = \"SIGN_OUT_FAILURE\";\nexport const TOKEN_REFRESH = \"TOKEN_REFRESH\";\nexport const TOKEN_AUTH_ERROR = \"TOKEN_AUTH_ERROR\";\nexport const CHECK_AUTHORIZATION = \"CHECK_AUTHORIZATION\";\n","import { jwtLocalStorageVariableName } from \"../setting/jwtSetting\";\n\nconst customHeader = () => {\n  if (sessionStorage.getItem(jwtLocalStorageVariableName)) {\n    return {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: \"Bearer \".concat(\n        sessionStorage.getItem(jwtLocalStorageVariableName)\n      )\n    };\n  }\n  return {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\"\n  };\n};\n\n// Make http request with fetch api.\nconst base = (method, url, data) =>\n  fetch(url, {\n    method,\n    headers: customHeader(),\n    body: JSON.stringify(data)\n  })\n    .then(response => {\n      if (response.ok) return response.json();\n      return { error: \"Error\" };\n    })\n    .catch(() => ({ error: \"Server Error\" }));\n\nconst fetchHelper = {};\n\n[\"get\", \"post\", \"put\", \"delete\"].forEach(method => {\n  fetchHelper[method] = base.bind(Object.create(null), method);\n});\n\nexport default fetchHelper;\n","export const jwtConfig = {\n  fetchUrl: \"http://117.17.198.44:8080\"\n};\n\nexport const jwtLocalStorageVariableName = \"tcpWebJwt\";\n","import jwtDecode from \"jwt-decode\";\nimport { jwtLocalStorageVariableName } from \"../setting/jwtSetting\";\n\nexport const setJwt = jwtToken => {\n  sessionStorage.setItem(jwtLocalStorageVariableName, jwtToken);\n  return true;\n};\n\nexport const clearJwt = () => {\n  sessionStorage.removeItem(jwtLocalStorageVariableName);\n  return true;\n};\n\nexport const getJwt = () => {\n  let jwt;\n\n  try {\n    jwt = sessionStorage.getItem(jwtLocalStorageVariableName);\n  } catch (err) {\n    clearJwt();\n  }\n\n  return jwt;\n};\n\nexport const checkExpirity = token => {\n  if (!token) {\n    return {\n      error: \"Login Fail\"\n    };\n  }\n\n  const decodedJwt = jwtDecode(token);\n  const currentTime = new Date().getTime();\n  // new Date().getTime() return millisecond(1/1000 second)\n  if (decodedJwt.exp > currentTime / 1000) {\n    return {\n      ...decodedJwt,\n      token,\n      success: true\n    };\n  }\n\n  return { timeoutError: true };\n};\n","import fetchHelper from \"../../helpers/fetchHelper\";\nimport { checkExpirity } from \"../../helpers/jwtHelper\";\n\n// export const postSignIn = ({ id, password }) => {\n//   return fetchHelper\n//     .post(\"/user/login\", { id, password })\n//     .then(response => checkExpirity(response.token));\n// };\n\nexport const postSignIn = ({ id, password }) => {\n  return new Promise((resolve, reject) => {\n    resolve(\n      checkExpirity(\n        \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiS2FuZyIsImV4cCI6MTYxODIzOTAyMiwicm9sZSI6ImFkbWluIiwidGVzdCI6IlRoaXNJc1Rlc3RKV1QifQ.dBsquE-q44jczagTHd8VxqpR7vZ3vFX3kougr1gOY2g\"\n      )\n    );\n  });\n};\n\nexport const tokenRefresh = () => {\n  fetchHelper\n    .post(\"/user/refresh\")\n    .then(response => checkExpirity(response.token));\n};\n","export const setUserId = userId => {\n  sessionStorage.setItem(\"userId\", userId);\n  return true;\n};\n\nexport const clearUserId = () => {\n  sessionStorage.removeItem(\"userId\");\n  return true;\n};\n\nexport const getUserId = () => {\n  let userId;\n\n  try {\n    userId = sessionStorage.getItem(\"userId\");\n  } catch (err) {\n    clearUserId();\n  }\n\n  return userId;\n};\n","import { all, takeEvery, put, call, fork } from \"redux-saga/effects\";\nimport * as AuthApi from \"./api\";\nimport * as AuthActions from \"./actionTypes\";\nimport * as jwtHelper from \"../../helpers/jwtHelper\";\nimport * as userInformationHelper from \"../../helpers/userInformationHelper\";\n\nconst postSignIn = function* postSignIn() {\n  yield takeEvery(AuthActions.POST_SIGN_IN, function* postSignInSaga({\n    id,\n    password\n  }) {\n    yield put({\n      type: AuthActions.POST_SIGN_IN_PENDING\n    });\n\n    const getResult = yield call(() => AuthApi.postSignIn({ id, password }));\n\n    if (getResult.success === true && getResult.token) {\n      yield call(() => jwtHelper.setJwt(getResult.token));\n      yield call(() => userInformationHelper.setUserId(id));\n      yield put({\n        type: AuthActions.UPDATE_USER_ID,\n        userId: id\n      });\n      if (getResult.role === \"admin\") {\n        yield put({\n          type: AuthActions.POST_SIGN_IN_SUCCESS_ADMIN\n        });\n      } else if (getResult.role === \"user\") {\n        yield put({\n          type: AuthActions.POST_SIGN_IN_SUCCESS_USER\n        });\n      }\n    } else {\n      yield call(() => jwtHelper.clearJwt());\n      yield put({\n        type: AuthActions.POST_SIGN_IN_FAILURE\n      });\n    }\n  });\n};\n\nconst signOut = function* signOut() {\n  yield takeEvery(AuthActions.SIGN_OUT, function* signOutSaga() {\n    yield call(() => jwtHelper.clearJwt());\n    yield call(() => userInformationHelper.clearUserId());\n    yield put({\n      type: AuthActions.SIGN_OUT_SUCCESS\n    });\n  });\n};\n\nconst tokenRefresh = function* tokenRefresh() {\n  yield takeEvery(AuthActions.TOKEN_REFRESH, function* signOutSaga() {\n    const getResult = yield call(() => AuthApi.tokenRefresh());\n\n    if (getResult.success === true && getResult.token) {\n      yield call(() => jwtHelper.setJwt(getResult.token));\n\n      if (getResult.role === \"admin\") {\n        yield put({\n          type: AuthActions.POST_SIGN_IN_SUCCESS_ADMIN\n        });\n      } else if (getResult.role === \"user\") {\n        yield put({\n          type: AuthActions.POST_SIGN_IN_SUCCESS_USER\n        });\n      }\n    } else {\n      yield call(() => jwtHelper.clearJwt());\n      yield put({\n        type: AuthActions.TOKEN_AUTH_ERROR\n      });\n    }\n  });\n};\n\nconst checkAuthorization = function* checkAuthorization() {\n  yield takeEvery(\n    AuthActions.CHECK_AUTHORIZATION,\n    function* checkAuthorizationSaga() {\n      const jwt = jwtHelper.getJwt();\n      const userId = userInformationHelper.getUserId();\n      const isAuthorization = jwtHelper.checkExpirity(jwt);\n\n      if (isAuthorization.success) {\n        // Check login state when the page refreshes.\n        yield put({\n          type: AuthActions.UPDATE_USER_ID,\n          userId\n        });\n        if (isAuthorization.role === \"admin\") {\n          yield put({ type: AuthActions.POST_SIGN_IN_SUCCESS_ADMIN });\n        } else if (isAuthorization.role === \"user\") {\n          yield put({ type: AuthActions.POST_SIGN_IN_SUCCESS_USER });\n        }\n      } else if (isAuthorization.timeoutError) {\n        yield put({\n          type: AuthActions.TOKEN_REFRESH\n        });\n      } else if (isAuthorization.error) {\n        yield put({\n          type: AuthActions.TOKEN_AUTH_ERROR\n        });\n      }\n    }\n  );\n};\n\nexport default function* authSaga() {\n  yield all([\n    fork(postSignIn),\n    fork(signOut),\n    fork(tokenRefresh),\n    fork(checkAuthorization)\n  ]);\n}\n","import { all } from \"redux-saga/effects\";\nimport authSaga from \"./auth/saga\";\n\n// Combine all sagas.\nexport default function* rootSaga() {\n  yield all([authSaga()]);\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { routerReducer, routerMiddleware } from \"react-router-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducers from \"./reducers\";\nimport rootSaga from \"./sagas\";\n\n// Register saga middleware.\nconst sagaMiddleware = createSagaMiddleware();\n// Register router middleware.\nconst routeMiddleware = routerMiddleware();\n// Combine saga middleware and router middleware.\nconst middlewares = [sagaMiddleware, routeMiddleware];\n\n// Create store.\nconst store = createStore(\n  combineReducers({\n    ...reducers,\n    router: routerReducer\n  }),\n  compose(applyMiddleware(...middlewares))\n);\n\n// Dynamically run saga.\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import * as AuthActions from \"./actionTypes\";\n\nexport const postSignIn = ({ id, password }) => ({\n  type: AuthActions.POST_SIGN_IN,\n  id,\n  password\n});\n\nexport const signOut = () => ({\n  type: AuthActions.SIGN_OUT\n});\n\nexport const checkAuthorization = () => ({\n  type: AuthActions.CHECK_AUTHORIZATION\n});\n","import store from \"./store\";\nimport * as authActions from \"./auth/actions\";\n\nconst checkSignIn = () => store.dispatch(authActions.checkAuthorization());\n\nexport default checkSignIn;\n","import { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nfunction ScrollToTopHelper({ history }) {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    };\n  }, [history]);\n\n  return null;\n}\n\nexport default withRouter(ScrollToTopHelper);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./FlexBox.css\";\n\nconst changePropsToClassName = ({\n  wrap,\n  column,\n  align,\n  justify,\n  maxHeight\n}) => {\n  let classNames = \"flex-box\";\n\n  // flex-wrap\n  classNames = classNames.concat(` flex-box--flex-wrap--${wrap}`);\n  // flex-direction\n  classNames = classNames.concat(` flex-box--flex-direction--${column}`);\n  // align-items\n  classNames = classNames.concat(` flex-box--align-items--${align}`);\n  // jusitify-content\n  classNames = classNames.concat(` flex-box--jusitify-content--${justify}`);\n  // height 100vh\n  classNames = classNames.concat(` flex-box--max-height-${maxHeight}`);\n\n  return classNames;\n};\n\nconst FlexBox = props => {\n  const {\n    wrap,\n    column,\n    align,\n    justify,\n    maxHeight,\n    createWrapper,\n    children\n  } = props;\n  const flexBoxClassNames = changePropsToClassName({\n    wrap,\n    column,\n    align,\n    justify,\n    maxHeight\n  });\n\n  return (\n    <div className={flexBoxClassNames}>\n      {createWrapper ? (\n        <div className=\"flexBoxChildrenWrapper\">{children}</div>\n      ) : (\n        children\n      )}\n    </div>\n  );\n\n  // return <div className={flexBoxClassNames}>{children || \"\"}</div>;\n};\n\nFlexBox.propTypes = {\n  wrap: PropTypes.oneOf([\"wrap\", \"no-wrap\", \"wrap-reverse\"]),\n  column: PropTypes.oneOf([\"row\", \"column\", \"row-reverse\", \"column-reverse\"]),\n  align: PropTypes.oneOf([\n    \"flex-start\",\n    \"flex-end\",\n    \"center\",\n    \"stretch\",\n    \"baseline\"\n  ]),\n  justify: PropTypes.oneOf([\n    \"flex-start\",\n    \"flex-end\",\n    \"center\",\n    \"space-between\",\n    \"space-around\"\n  ]),\n  maxHeight: PropTypes.bool,\n  createWrapper: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.array]).isRequired\n};\n\nFlexBox.defaultProps = {\n  wrap: \"wrap\",\n  column: \"row\",\n  align: \"flex-start\",\n  justify: \"flex-start\",\n  maxHeight: false,\n  createWrapper: false\n};\n\nexport default FlexBox;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./SignInForm.css\";\n\nconst SignInForm = props => {\n  const {\n    handleSubmit,\n    identityValue,\n    handleIdentityValue,\n    passwordValue,\n    handlePasswordVaule,\n    idPasswordError,\n    signupUrl\n  } = props;\n\n  const [identityValueIsEmpty, setIdentityValueIsEmpty] = useState(false);\n  const [passwordValueIsEmpty, setPasswordValueIsEmpty] = useState(false);\n\n  const validationCheck = () => {\n    let valueIsEmpty = false;\n\n    if (identityValue === \"\") {\n      setIdentityValueIsEmpty(true);\n      valueIsEmpty = true;\n    } else setIdentityValueIsEmpty(false);\n\n    if (passwordValue === \"\") {\n      setPasswordValueIsEmpty(true);\n      valueIsEmpty = true;\n    } else setPasswordValueIsEmpty(false);\n\n    return !valueIsEmpty;\n  };\n\n  const validationCheckAndHandleSubmit = event => {\n    // Prevent browers refresh.\n    event.preventDefault();\n\n    if (validationCheck()) handleSubmit();\n  };\n\n  return (\n    <div className=\"signin-form-component\">\n      <form\n        className=\"signin-form-component__form\"\n        onSubmit={validationCheckAndHandleSubmit}\n      >\n        <div className=\"signin-form-component__form__input-box-wrapper\">\n          <TextField\n            className=\"signin-form-component__form__input-box-wrapper__email-input-box\"\n            label=\"Email\"\n            value={identityValue}\n            onChange={handleIdentityValue || undefined}\n            error={identityValueIsEmpty || idPasswordError}\n            helperText={(() => {\n              if (idPasswordError) return \"ID or password error\";\n              if (identityValueIsEmpty) return \"Please fill ID\";\n              return \" \";\n            })()}\n            fullWidth\n          />\n        </div>\n        <div className=\"signin-form-component__form__input-box-wrapper\">\n          <TextField\n            className=\"signin-form-component__form__input-box-wrapper__password-input-box\"\n            label=\"Password\"\n            type=\"password\"\n            value={passwordValue}\n            onChange={handlePasswordVaule || undefined}\n            error={passwordValueIsEmpty || idPasswordError}\n            helperText={(() => {\n              if (idPasswordError) return \"ID or password error\";\n              if (passwordValueIsEmpty) return \"Please fill password\";\n              return \" \";\n            })()}\n            fullWidth\n          />\n        </div>\n\n        <div className=\"signin-form-component__form__button-box-wrapper\">\n          <div className=\"signin-form-component__form__button-box-wrapper__button-wrapper\">\n            <Button\n              className=\"signin-form-component__form__button-box-wrapper__button-wrapper__signup-button\"\n              color=\"primary\"\n              component={Link}\n              to={signupUrl || \"\"}\n            >\n              Sign-up in tcp\n            </Button>\n          </div>\n\n          <div className=\"signin-form-component__form__button-box-wrapper__button-wrapper\">\n            <Button\n              className=\"signin-form-component__form__button-box-wrapper__button-wrapper__signin-button\"\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n            >\n              Sign-in\n            </Button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nSignInForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  identityValue: PropTypes.string.isRequired,\n  handleIdentityValue: PropTypes.func.isRequired,\n  passwordValue: PropTypes.string.isRequired,\n  handlePasswordVaule: PropTypes.func.isRequired,\n  idPasswordError: PropTypes.bool.isRequired,\n  signupUrl: PropTypes.string.isRequired\n};\n\nexport default SignInForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Logo.css\";\nimport LogoImage from \"../../assets/image/logo.png\";\n\nconst changePropsToClassName = ({ size, spin }) => {\n  let classNames = \"logo-component\";\n\n  // size\n  classNames = classNames.concat(` logo-component--size-${size}`);\n  // spin\n  classNames = classNames.concat(` logo-component--spin-${spin}`);\n\n  return classNames;\n};\n\nconst Logo = ({ size, spin }) => {\n  const logoClassNames = changePropsToClassName({ size, spin });\n\n  return (\n    <div className={logoClassNames}>\n      <img className=\"logo-component__logo-image\" src={LogoImage} alt=\"Logo\" />\n    </div>\n  );\n};\n\nLogo.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  spin: PropTypes.bool\n};\n\nLogo.defaultProps = {\n  size: \"medium\",\n  spin: false\n};\n\nexport default Logo;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FlexBox from \"../FlexBox/FlexBox\";\n\nconst LoadingSpinnerStyles = makeStyles(() => ({\n  loadingStateWrapperClassName: {\n    height: \"80vh\"\n  }\n}));\n\nconst LoadingSpinner = props => {\n  const { loadingState, children } = props;\n  const { loadingStateWrapperClassName } = LoadingSpinnerStyles();\n\n  return (\n    <>\n      {loadingState === true ? (\n        <div className={`${loadingStateWrapperClassName}`}>\n          <FlexBox wrap=\"wrap\" column=\"column\" align=\"center\" justify=\"center\">\n            <CircularProgress />\n          </FlexBox>\n        </div>\n      ) : (\n        <>{children || <></>}</>\n      )}\n    </>\n  );\n};\n\nLoadingSpinner.propTypes = {\n  loadingState: PropTypes.bool.isRequired,\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.array]).isRequired\n};\n\nexport default LoadingSpinner;\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport FlexBox from \"../../components/FlexBox/FlexBox\";\r\nimport SignInForm from \"../../components/SignInForm/SignInForm\";\r\nimport Logo from \"../../components/Logo/Logo\";\r\nimport LoadingSpinner from \"../../components/LoadingSpinner/LoadingSpinner\";\r\nimport * as authActions from \"../../redux/auth/actions\";\r\n\r\nconst SignIn = (props) => {\r\n  const { loadingState, postSignIn, idPasswordError } = props;\r\n  const [identityValue, setIdentityValue] = useState(\"\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n\r\n  const handleIdentityValue = (event) => setIdentityValue(event.target.value);\r\n  const handlePasswordValue = (event) => setPasswordValue(event.target.value);\r\n\r\n  const handleSubmit = () => {\r\n    const userInformation = {\r\n      id: identityValue,\r\n      password: passwordValue,\r\n    };\r\n\r\n    postSignIn(userInformation);\r\n  };\r\n\r\n  return (\r\n    <FlexBox\r\n      wrap=\"wrap\"\r\n      column=\"column\"\r\n      align=\"center\"\r\n      justify=\"center\"\r\n      maxHeight\r\n      createWrapper\r\n    >\r\n      <LoadingSpinner loadingState={loadingState}>\r\n        <Logo size=\"large\" spin />\r\n        <SignInForm\r\n          handleSubmit={handleSubmit}\r\n          identityValue={identityValue}\r\n          handleIdentityValue={handleIdentityValue}\r\n          passwordValue={passwordValue}\r\n          idPasswordError={idPasswordError}\r\n          handlePasswordVaule={handlePasswordValue}\r\n          signupUrl=\"/signup\"\r\n        />\r\n      </LoadingSpinner>\r\n    </FlexBox>\r\n  );\r\n};\r\n\r\nSignIn.propTypes = {\r\n  postSignIn: PropTypes.func.isRequired,\r\n  loadingState: PropTypes.bool.isRequired,\r\n  idPasswordError: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { auth } = state;\r\n\r\n  return {\r\n    isSignIn: auth.isSignIn,\r\n    loadingState: auth.loadingState,\r\n    idPasswordError: auth.idPasswordError,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(authActions, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst IdentityValueInputBoxStyles = makeStyles(() => ({\n  inputBoxClassName: {\n    paddingBottom: \"10px\"\n  }\n}));\n\nconst IdentityValueInputBox = props => {\n  const {\n    value,\n    setValue,\n    valueErrMessage,\n    setValueErrMessage,\n    identityValueDuplicateCheck\n  } = props;\n  const { inputBoxClassName } = IdentityValueInputBoxStyles();\n\n  const identityValueCheck = async targetValue => {\n    const identityValueIsEmpty = targetValue === \"\";\n    if (identityValueIsEmpty) return \"Please fill ID\";\n\n    const identityRegex = /^[A-Za-z0-9+]*$/.test(targetValue);\n    if (!identityRegex) return \"Use only alphabets and numbers\";\n\n    const identityValueCanUse = await identityValueDuplicateCheck({\n      identityValue: targetValue\n    });\n    if (!identityValueCanUse) return \"This ID is already in use.\";\n\n    return \"\";\n  };\n\n  const handleIdentityValue = async event => {\n    setValue(event.target.value);\n    setValueErrMessage(\"Please wait\");\n    setValueErrMessage(await identityValueCheck(event.target.value));\n  };\n\n  return (\n    <TextField\n      className={`${inputBoxClassName}`}\n      label=\"ID\"\n      type=\"string\"\n      value={value}\n      onChange={handleIdentityValue}\n      error={!!valueErrMessage}\n      helperText={valueErrMessage || \" \"}\n      fullWidth\n    />\n  );\n};\n\nIdentityValueInputBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  setValue: PropTypes.func.isRequired,\n  valueErrMessage: PropTypes.string.isRequired,\n  setValueErrMessage: PropTypes.func.isRequired,\n  identityValueDuplicateCheck: PropTypes.func.isRequired\n};\n\nexport default IdentityValueInputBox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst PasswordValueInputBoxStyles = makeStyles(() => ({\n  inputBoxClassName: {\n    paddingBottom: \"10px\"\n  }\n}));\n\nconst PasswordValueInputBox = props => {\n  const {\n    label,\n    value,\n    setValue,\n    valueErrMessage,\n    setValueErrMessage,\n    passwordConfirmValue,\n    setPasswordConfirmValueErrMessage\n  } = props;\n  const { inputBoxClassName } = PasswordValueInputBoxStyles();\n\n  const passwordValueCheck = targetValue => {\n    const passwordValueIsEmpty = targetValue === \"\";\n    if (passwordValueIsEmpty) return \"Please fill password\";\n\n    const passwordRegex = /^[A-Za-z0-9~!@#$%^&*()_+|<>?:{}+]*$/.test(\n      targetValue\n    );\n    if (!passwordRegex)\n      return \"Use only alphabets, numbers and special characters\";\n\n    return \"\";\n  };\n\n  const handlePasswordValue = event => {\n    setValue(event.target.value);\n    setValueErrMessage(passwordValueCheck(event.target.value));\n    setPasswordConfirmValueErrMessage(\n      event.target.value === passwordConfirmValue\n        ? \"\"\n        : \"Please check Password and Password confirm\"\n    );\n  };\n\n  return (\n    <TextField\n      className={`${inputBoxClassName}`}\n      label={label}\n      type=\"password\"\n      value={value}\n      onChange={handlePasswordValue}\n      error={!!valueErrMessage}\n      helperText={valueErrMessage || \" \"}\n      fullWidth\n    />\n  );\n};\n\nPasswordValueInputBox.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  setValue: PropTypes.func.isRequired,\n  valueErrMessage: PropTypes.string.isRequired,\n  setValueErrMessage: PropTypes.func.isRequired,\n  passwordConfirmValue: PropTypes.string,\n  setPasswordConfirmValueErrMessage: PropTypes.func\n};\n\nPasswordValueInputBox.defaultProps = {\n  label: \"Password\",\n  passwordConfirmValue: \"\",\n  setPasswordConfirmValueErrMessage: () => {}\n};\n\nexport default PasswordValueInputBox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst PasswordConfirmValueInputBoxStyles = makeStyles(() => ({\n  inputBoxClassName: {\n    paddingBottom: \"10px\"\n  }\n}));\n\nconst PasswordConfirmValueInputBox = props => {\n  const {\n    value,\n    setValue,\n    valueErrMessage,\n    setValueErrMessage,\n    passwordValue\n  } = props;\n  const { inputBoxClassName } = PasswordConfirmValueInputBoxStyles();\n\n  const passwordConfirmValueCheck = targetValue => {\n    const passwordConfirmValueIsEmpty = targetValue === \"\";\n    if (passwordConfirmValueIsEmpty) return \"Please fill password confirm\";\n\n    const passwordConfirmValueIsSame = targetValue === passwordValue;\n    if (!passwordConfirmValueIsSame)\n      return \"Please check Password and Password confirm\";\n\n    return \"\";\n  };\n\n  const handlePasswordConfirmValue = event => {\n    setValue(event.target.value);\n    setValueErrMessage(passwordConfirmValueCheck(event.target.value));\n  };\n\n  return (\n    <TextField\n      className={`${inputBoxClassName}`}\n      label=\"Password confirm\"\n      type=\"password\"\n      value={value}\n      onChange={handlePasswordConfirmValue}\n      error={!!valueErrMessage}\n      helperText={valueErrMessage || \" \"}\n      fullWidth\n    />\n  );\n};\n\nPasswordConfirmValueInputBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  setValue: PropTypes.func.isRequired,\n  valueErrMessage: PropTypes.string.isRequired,\n  setValueErrMessage: PropTypes.func.isRequired,\n  passwordValue: PropTypes.string.isRequired\n};\n\nexport default PasswordConfirmValueInputBox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst NameValueInputBoxStyles = makeStyles(() => ({\n  inputBoxClassName: {\n    paddingBottom: \"10px\"\n  }\n}));\n\nconst NameValueInputBox = props => {\n  const { value, setValue, valueErrMessage, setValueErrMessage, label } = props;\n  const { inputBoxClassName } = NameValueInputBoxStyles();\n\n  const nameValueCheck = targetValue => {\n    const nameValueIsEmpty = targetValue === \"\";\n    if (nameValueIsEmpty) return \"Please fill name\";\n\n    const nameRegex = /^[가-힣a-zA-Z]*$/.test(targetValue);\n    if (!nameRegex) return \"Use only alphabets or korean\";\n\n    return \"\";\n  };\n  const handleNameValue = event => {\n    setValue(event.target.value);\n    setValueErrMessage(nameValueCheck(event.target.value));\n  };\n\n  return (\n    <TextField\n      className={`${inputBoxClassName}`}\n      label={label}\n      type=\"string\"\n      value={value}\n      onChange={handleNameValue}\n      error={!!valueErrMessage}\n      helperText={valueErrMessage || \" \"}\n      fullWidth\n    />\n  );\n};\n\nNameValueInputBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  setValue: PropTypes.func.isRequired,\n  valueErrMessage: PropTypes.string.isRequired,\n  setValueErrMessage: PropTypes.func.isRequired,\n  label: PropTypes.string\n};\n\nNameValueInputBox.defaultProps = {\n  label: \"Name\"\n};\n\nexport default NameValueInputBox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst BirthdayValueInputBoxStyles = makeStyles(() => ({\n  inputBoxClassName: {\n    paddingBottom: \"10px\"\n  }\n}));\n\nconst BirthdayValueInputBox = props => {\n  const { value, setValue, valueErrMessage, setValueErrMessage } = props;\n  const { inputBoxClassName } = BirthdayValueInputBoxStyles();\n\n  const birthdayValueCheck = targetValue => {\n    const birthdayValueIsEmpty = targetValue === \"\";\n    if (birthdayValueIsEmpty) return \"Please fill birthday\";\n\n    const birthdayRegex = /^\\d{2}(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$/.test(\n      targetValue\n    );\n    if (!birthdayRegex) return \"Input YYMMDD format\";\n\n    return \"\";\n  };\n\n  const handleBirthdayValue = event => {\n    setValue(event.target.value);\n    setValueErrMessage(birthdayValueCheck(event.target.value));\n  };\n\n  return (\n    <TextField\n      className={`${inputBoxClassName}`}\n      label=\"Birthday\"\n      type=\"string\"\n      value={value}\n      onChange={handleBirthdayValue}\n      error={!!valueErrMessage}\n      helperText={valueErrMessage || \" \"}\n      fullWidth\n    />\n  );\n};\n\nBirthdayValueInputBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  setValue: PropTypes.func.isRequired,\n  valueErrMessage: PropTypes.string.isRequired,\n  setValueErrMessage: PropTypes.func.isRequired\n};\n\nexport default BirthdayValueInputBox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst NickNameValueInputBoxStyles = makeStyles(() => ({\n  inputBoxClassName: {\n    paddingBottom: \"10px\"\n  }\n}));\n\nconst NickNameValueInputBox = props => {\n  const { value, setValue, valueErrMessage, setValueErrMessage } = props;\n  const { inputBoxClassName } = NickNameValueInputBoxStyles();\n\n  const nickNameValueCheck = targetValue => {\n    const nickNameValueIsEmpty = targetValue === \"\";\n    if (nickNameValueIsEmpty) return \"Please fill nick name\";\n\n    const nickNameRegex = /^[가-힣ㄱ-ㅎㅏ-ㅣa-zA-Z0-9~!@#$%^&*()_+|<>?:{}+]*$/.test(\n      targetValue\n    );\n    if (!nickNameRegex)\n      return \"Use only korean, alphabets, numbers and special characters\";\n\n    return \"\";\n  };\n  const handleNickNameValue = event => {\n    setValue(event.target.value);\n    setValueErrMessage(nickNameValueCheck(event.target.value));\n  };\n\n  return (\n    <TextField\n      className={`${inputBoxClassName}`}\n      label=\"Nickname\"\n      type=\"string\"\n      value={value}\n      onChange={handleNickNameValue}\n      error={!!valueErrMessage}\n      helperText={valueErrMessage || \" \"}\n      fullWidth\n    />\n  );\n};\n\nNickNameValueInputBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  setValue: PropTypes.func.isRequired,\n  valueErrMessage: PropTypes.string.isRequired,\n  setValueErrMessage: PropTypes.func.isRequired\n};\n\nexport default NickNameValueInputBox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst SchoolValueInputBoxStyles = makeStyles(() => ({\n  inputBoxClassName: {\n    paddingBottom: \"10px\"\n  }\n}));\n\nconst SchoolValueInputBox = props => {\n  const { value, setValue, valueErrMessage, setValueErrMessage } = props;\n  const { inputBoxClassName } = SchoolValueInputBoxStyles();\n\n  const schoolValueCheck = targetValue => {\n    const schoolValueIsEmpty = targetValue === \"\";\n    if (schoolValueIsEmpty) return \"Please fill school\";\n\n    const schoolRegex = /^[가-힣+]*(대학교)$/.test(targetValue);\n    if (!schoolRegex) return \"Input XX대학교 format\";\n\n    return \"\";\n  };\n  const handleSchoolValue = event => {\n    setValue(event.target.value);\n    setValueErrMessage(schoolValueCheck(event.target.value));\n  };\n\n  return (\n    <TextField\n      className={`${inputBoxClassName}`}\n      label=\"School\"\n      type=\"string\"\n      value={value}\n      onChange={handleSchoolValue}\n      error={!!valueErrMessage}\n      helperText={valueErrMessage || \" \"}\n      fullWidth\n    />\n  );\n};\n\nSchoolValueInputBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  setValue: PropTypes.func.isRequired,\n  valueErrMessage: PropTypes.string.isRequired,\n  setValueErrMessage: PropTypes.func.isRequired\n};\n\nexport default SchoolValueInputBox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst StudentNumberValueInputBoxStyles = makeStyles(() => ({\n  inputBoxClassName: {\n    paddingBottom: \"10px\"\n  }\n}));\n\nconst StudentNumberValueInputBox = props => {\n  const { value, setValue, valueErrMessage, setValueErrMessage } = props;\n  const { inputBoxClassName } = StudentNumberValueInputBoxStyles();\n\n  const stdNumValueCheck = targetValue => {\n    const stdNumValueIsEmpty = targetValue === \"\";\n    if (stdNumValueIsEmpty) return \"Please fill student number\";\n\n    const stdNumRegex = /^[0-9]{8}$/.test(targetValue);\n    if (!stdNumRegex) return \"Input correct student number\";\n\n    return \"\";\n  };\n\n  const handleStdNumValue = event => {\n    setValue(event.target.value);\n    setValueErrMessage(stdNumValueCheck(event.target.value));\n  };\n\n  return (\n    <TextField\n      className={`${inputBoxClassName}`}\n      label=\"Student number\"\n      type=\"string\"\n      value={value}\n      onChange={handleStdNumValue}\n      error={!!valueErrMessage}\n      helperText={valueErrMessage || \" \"}\n      fullWidth\n    />\n  );\n};\n\nStudentNumberValueInputBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  setValue: PropTypes.func.isRequired,\n  valueErrMessage: PropTypes.string.isRequired,\n  setValueErrMessage: PropTypes.func.isRequired\n};\n\nexport default StudentNumberValueInputBox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst MajorValueInputBoxStyles = makeStyles(() => ({\n  inputBoxClassName: {\n    paddingBottom: \"10px\"\n  }\n}));\n\nconst MajorValueInputBox = props => {\n  const { value, setValue, valueErrMessage, setValueErrMessage } = props;\n  const { inputBoxClassName } = MajorValueInputBoxStyles();\n\n  const majorValueCheck = targetValue => {\n    const majorValueIsEmpty = targetValue === \"\";\n    if (majorValueIsEmpty) return \"Please fill major\";\n\n    const majorRegex = /^[가-힣+]*(학과)$/.test(targetValue);\n    if (!majorRegex) return \"Input XX학과 format\";\n\n    return \"\";\n  };\n\n  const handleMajorValue = event => {\n    setValue(event.target.value);\n    setValueErrMessage(majorValueCheck(event.target.value));\n  };\n\n  return (\n    <TextField\n      className={`${inputBoxClassName}`}\n      label=\"Major\"\n      type=\"string\"\n      value={value}\n      onChange={handleMajorValue}\n      error={!!valueErrMessage}\n      helperText={valueErrMessage || \" \"}\n      fullWidth\n    />\n  );\n};\n\nMajorValueInputBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  setValue: PropTypes.func.isRequired,\n  valueErrMessage: PropTypes.string.isRequired,\n  setValueErrMessage: PropTypes.func.isRequired\n};\n\nexport default MajorValueInputBox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst EmailValueInputBoxStyles = makeStyles(() => ({\n  inputBoxClassName: {\n    paddingBottom: \"10px\"\n  }\n}));\n\nconst EmailValueInputBox = props => {\n  const { value, setValue, valueErrMessage, setValueErrMessage } = props;\n  const { inputBoxClassName } = EmailValueInputBoxStyles();\n\n  const emailValueCheck = targetValue => {\n    const emailValueIsEmpty = targetValue === \"\";\n    if (emailValueIsEmpty) return \"Please fill email\";\n\n    const emailRegex = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/.test(\n      targetValue\n    );\n    if (!emailRegex) return \"Input corret email format\";\n\n    return \"\";\n  };\n  const handleEmailValue = event => {\n    setValue(event.target.value);\n    setValueErrMessage(emailValueCheck(event.target.value));\n  };\n\n  return (\n    <TextField\n      className={`${inputBoxClassName}`}\n      label=\"Email\"\n      type=\"string\"\n      value={value}\n      onChange={handleEmailValue}\n      error={!!valueErrMessage}\n      helperText={valueErrMessage || \" \"}\n      fullWidth\n    />\n  );\n};\n\nEmailValueInputBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  setValue: PropTypes.func.isRequired,\n  valueErrMessage: PropTypes.string.isRequired,\n  setValueErrMessage: PropTypes.func.isRequired\n};\n\nexport default EmailValueInputBox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst PhoneNumberValueInputBoxStyles = makeStyles(() => ({\n  inputBoxClassName: {\n    paddingBottom: \"10px\"\n  }\n}));\n\nconst PhoneNumberValueInputBox = props => {\n  const { value, setValue, valueErrMessage, setValueErrMessage } = props;\n  const { inputBoxClassName } = PhoneNumberValueInputBoxStyles();\n\n  const phoneNumValueCheck = targetValue => {\n    const phoneNumValueIsEmpty = targetValue === \"\";\n    if (phoneNumValueIsEmpty) return \"Please fill phone number\";\n\n    const phoneNumRegex = /^[0-9]{11}$/.test(targetValue);\n    if (!phoneNumRegex) return \"Input phone number without hyphen\";\n\n    return \"\";\n  };\n\n  const handlePhoneNumValue = event => {\n    setValue(event.target.value);\n    setValueErrMessage(phoneNumValueCheck(event.target.value));\n  };\n\n  return (\n    <TextField\n      className={`${inputBoxClassName}`}\n      label=\"Phone number\"\n      type=\"string\"\n      value={value}\n      onChange={handlePhoneNumValue}\n      error={!!valueErrMessage}\n      helperText={valueErrMessage || \" \"}\n      fullWidth\n    />\n  );\n};\n\nPhoneNumberValueInputBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  setValue: PropTypes.func.isRequired,\n  valueErrMessage: PropTypes.string.isRequired,\n  setValueErrMessage: PropTypes.func.isRequired\n};\n\nexport default PhoneNumberValueInputBox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./SignUpForm.css\";\n\nimport IdentityValueInputBox from \"../InputBoxes/IdentityValueInputBox/IdentityValueInputBox\";\nimport PasswordValueInputBox from \"../InputBoxes/PasswordValueInputBox/PasswordValueInputBox\";\nimport PasswordConfirmValueInputBox from \"../InputBoxes/PasswordConfirmValueInputBox/PasswordConfirmValueInputBox\";\nimport NameValueInputBox from \"../InputBoxes/NameValueInputBox/NameValueInputBox\";\nimport BirthdayValueInputBox from \"../InputBoxes/BirthdayValueInputBox/BirthdayValueInputBox\";\nimport NickNameValueInputBox from \"../InputBoxes/NickNameValueInputBox/NickNameValueInputBox\";\nimport SchoolValueInputBox from \"../InputBoxes/SchoolValueInputBox/SchoolValueInputBox\";\nimport StudentNumberValueInputBox from \"../InputBoxes/StudentNumberValueInputBox/StudentNumberValueInputBox\";\nimport MajorValueInputBox from \"../InputBoxes/MajorValueInputBox/MajorValueInputBox\";\nimport EmailValueInputBox from \"../InputBoxes/EmailValueInputBox/EmailValueInputBox\";\nimport PhoneNumberValueInputBox from \"../InputBoxes/PhoneNumberValueInputBox/PhoneNumberValueInputBox\";\n\nconst signUpFormStyles = makeStyles(() => ({\n  signUpFormWrapperClassName: {\n    width: \"30vw\",\n    marginBottom: \"20px\"\n  }\n}));\n\nconst SignUpForm = props => {\n  const { signupFormData, handleSubmit } = props;\n  const { signUpFormWrapperClassName } = signUpFormStyles();\n\n  const validationCheckAndHandleSubmit = event => {\n    // Prevent browers refresh.\n    event.preventDefault();\n    handleSubmit();\n  };\n\n  return (\n    <div className={`signup-form-component ${signUpFormWrapperClassName}`}>\n      <form\n        className=\"signup-form-component__form\"\n        onSubmit={validationCheckAndHandleSubmit}\n      >\n        <IdentityValueInputBox\n          value={signupFormData.identity.value}\n          setValue={signupFormData.identity.setValue}\n          valueErrMessage={signupFormData.identity.valueErrMessage}\n          setValueErrMessage={signupFormData.identity.setValueErrMessage}\n          identityValueDuplicateCheck={\n            signupFormData.identity.identityValueDuplicateCheck\n          }\n        />\n        <PasswordValueInputBox\n          value={signupFormData.password.value}\n          setValue={signupFormData.password.setValue}\n          valueErrMessage={signupFormData.password.valueErrMessage}\n          setValueErrMessage={signupFormData.password.setValueErrMessage}\n          passwordConfirmValue={signupFormData.password.passwordConfirmValue}\n          setPasswordConfirmValueErrMessage={\n            signupFormData.password.setPasswordConfirmValueErrMessage\n          }\n        />\n        <PasswordConfirmValueInputBox\n          value={signupFormData.passwordConfirm.value}\n          setValue={signupFormData.passwordConfirm.setValue}\n          valueErrMessage={signupFormData.passwordConfirm.valueErrMessage}\n          setValueErrMessage={signupFormData.passwordConfirm.setValueErrMessage}\n          passwordValue={signupFormData.passwordConfirm.passwordValue}\n        />\n        <NameValueInputBox\n          value={signupFormData.name.value}\n          setValue={signupFormData.name.setValue}\n          valueErrMessage={signupFormData.name.valueErrMessage}\n          setValueErrMessage={signupFormData.name.setValueErrMessage}\n        />\n        <BirthdayValueInputBox\n          value={signupFormData.birthday.value}\n          setValue={signupFormData.birthday.setValue}\n          valueErrMessage={signupFormData.birthday.valueErrMessage}\n          setValueErrMessage={signupFormData.birthday.setValueErrMessage}\n        />\n        <NickNameValueInputBox\n          value={signupFormData.nickNmae.value}\n          setValue={signupFormData.nickNmae.setValue}\n          valueErrMessage={signupFormData.nickNmae.valueErrMessage}\n          setValueErrMessage={signupFormData.nickNmae.setValueErrMessage}\n        />\n        <SchoolValueInputBox\n          value={signupFormData.school.value}\n          setValue={signupFormData.school.setValue}\n          valueErrMessage={signupFormData.school.valueErrMessage}\n          setValueErrMessage={signupFormData.school.setValueErrMessage}\n        />\n        <StudentNumberValueInputBox\n          value={signupFormData.studentNumber.value}\n          setValue={signupFormData.studentNumber.setValue}\n          valueErrMessage={signupFormData.studentNumber.valueErrMessage}\n          setValueErrMessage={signupFormData.studentNumber.setValueErrMessage}\n        />\n        <MajorValueInputBox\n          value={signupFormData.major.value}\n          setValue={signupFormData.major.setValue}\n          valueErrMessage={signupFormData.major.valueErrMessage}\n          setValueErrMessage={signupFormData.major.setValueErrMessage}\n        />\n        <EmailValueInputBox\n          value={signupFormData.email.value}\n          setValue={signupFormData.email.setValue}\n          valueErrMessage={signupFormData.email.valueErrMessage}\n          setValueErrMessage={signupFormData.email.setValueErrMessage}\n        />\n        <PhoneNumberValueInputBox\n          value={signupFormData.phoneNumber.value}\n          setValue={signupFormData.phoneNumber.setValue}\n          valueErrMessage={signupFormData.phoneNumber.valueErrMessage}\n          setValueErrMessage={signupFormData.phoneNumber.setValueErrMessage}\n        />\n\n        <div className=\"signup-form-component__formr__button-wrapper\">\n          <Button\n            className=\"signin-form-component__form__button-wrapper__signup-button\"\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            fullWidth\n          >\n            Sign-up\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nSignUpForm.propTypes = {\n  signupFormData: PropTypes.shape({\n    identity: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired,\n      identityValueDuplicateCheck: PropTypes.func.isRequired\n    }),\n    password: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired,\n      passwordConfirmValue: PropTypes.string.isRequired,\n      setPasswordConfirmValueErrMessage: PropTypes.func.isRequired\n    }),\n    passwordConfirm: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired,\n      passwordValue: PropTypes.string.isRequired\n    }),\n    name: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired\n    }),\n    birthday: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired\n    }),\n    nickNmae: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired\n    }),\n    school: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired\n    }),\n    studentNumber: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired\n    }),\n    major: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired\n    }),\n    email: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired\n    }),\n    phoneNumber: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired\n    })\n  }).isRequired,\n  handleSubmit: PropTypes.func.isRequired\n};\n\nexport default SignUpForm;\n","import React from \"react\";\n\nconst Error = () => <div>Error. Plz press F5.</div>;\n\nexport default Error;\n","const base = (method, url, requestData, responseData) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      console.log(url, method, requestData);\n      if (responseData.success) resolve(responseData);\n      else reject(new Error());\n    }, 500);\n  });\n};\n\nconst fakeFetchHelper = {};\n\n[\"get\", \"post\", \"put\", \"delete\"].forEach(method => {\n  fakeFetchHelper[method] = base.bind(Object.create(null), method);\n});\n\nexport default fakeFetchHelper;\n","import fetchHelper from \"../../helpers/fakeFetchHelper\";\n\nexport const postSignUp = async ({\n  userInformation,\n  apiCallStart,\n  apiCallSuccess,\n  apiCallFailure\n}) => {\n  apiCallStart();\n\n  const apiResponse = { success: true };\n\n  await apiCallStart();\n\n  await fetchHelper\n    .post(`/user`, userInformation, apiResponse)\n    .then(response => apiCallSuccess(response))\n    .catch(() => apiCallFailure());\n};\n\nexport const putIdCheck = async ({ identityValue }) => {\n  const apiResponse = { success: true, useable: true };\n\n  return fetchHelper\n    .put(`/user/check`, { id: identityValue }, apiResponse)\n    .then(response => response.useable);\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FlexBox from \"../../components/FlexBox/FlexBox\";\nimport SignUpForm from \"../../components/SignUpForm/SignUpForm\";\nimport Logo from \"../../components/Logo/Logo\";\nimport ErrorPage from \"../Pages/ErrorPage/ErrorPage\";\nimport LoadingSpinner from \"../../components/LoadingSpinner/LoadingSpinner\";\nimport * as signUpApi from \"./SignUpApi\";\n\nconst SignUp = props => {\n  const { history } = props;\n\n  const [identityValue, setIdentityValue] = useState(\"\");\n  const [identityValueErrMessage, setIdentityValueErrMessage] = useState(\"\");\n\n  const [passwordValue, setPasswordValue] = useState(\"\");\n  const [passwordValueErrMessage, setPasswordValueErrMessage] = useState(\"\");\n\n  const [passwordConfirmValue, setPasswordConfirmValue] = useState(\"\");\n  const [\n    passwordConfirmValueErrMessage,\n    setPasswordConfirmValueErrMessage\n  ] = useState(\"\");\n\n  const [nameValue, setNameValue] = useState(\"\");\n  const [nameValueErrMessage, setNameValueErrMessage] = useState(\"\");\n\n  const [birthdayValue, setBirthdayValue] = useState(\"\");\n  const [birthdayValueErrMessage, setBirthdayValueErrMessage] = useState(\"\");\n\n  const [nickNameValue, setNickNameValue] = useState(\"\");\n  const [nickNameValueErrMessage, setNickNameValueErrMessage] = useState(\"\");\n\n  const [schoolValue, setSchoolValue] = useState(\"\");\n  const [schoolValueErrMessage, setSchoolValueErrMessage] = useState(\"\");\n\n  const [stdNumValue, setStdNumValue] = useState(\"\");\n  const [stdNumValueErrMessage, setStdNumValueErrMessage] = useState(\"\");\n\n  const [majorValue, setMajorValue] = useState(\"\");\n  const [majorValueErrMessage, setMajorValueErrMessage] = useState(\"\");\n\n  const [emailValue, setEmailValue] = useState(\"\");\n  const [emailValueErrMessage, setEmailValueErrMessage] = useState(\"\");\n\n  const [phoneNumValue, setPhoneNumValue] = useState(\"\");\n  const [phoneNumValueErrMessage, setPhoneNumValueErrMessage] = useState(\"\");\n\n  const signupFormData = {\n    identity: {\n      value: identityValue,\n      setValue: setIdentityValue,\n      valueErrMessage: identityValueErrMessage,\n      setValueErrMessage: setIdentityValueErrMessage,\n      identityValueDuplicateCheck: signUpApi.putIdCheck\n    },\n    password: {\n      value: passwordValue,\n      setValue: setPasswordValue,\n      valueErrMessage: passwordValueErrMessage,\n      setValueErrMessage: setPasswordValueErrMessage,\n      passwordConfirmValue,\n      setPasswordConfirmValueErrMessage\n    },\n    passwordConfirm: {\n      value: passwordConfirmValue,\n      setValue: setPasswordConfirmValue,\n      valueErrMessage: passwordConfirmValueErrMessage,\n      setValueErrMessage: setPasswordConfirmValueErrMessage,\n      passwordValue\n    },\n    name: {\n      value: nameValue,\n      setValue: setNameValue,\n      valueErrMessage: nameValueErrMessage,\n      setValueErrMessage: setNameValueErrMessage\n    },\n    birthday: {\n      value: birthdayValue,\n      setValue: setBirthdayValue,\n      valueErrMessage: birthdayValueErrMessage,\n      setValueErrMessage: setBirthdayValueErrMessage\n    },\n    nickNmae: {\n      value: nickNameValue,\n      setValue: setNickNameValue,\n      valueErrMessage: nickNameValueErrMessage,\n      setValueErrMessage: setNickNameValueErrMessage\n    },\n    school: {\n      value: schoolValue,\n      setValue: setSchoolValue,\n      valueErrMessage: schoolValueErrMessage,\n      setValueErrMessage: setSchoolValueErrMessage\n    },\n    studentNumber: {\n      value: stdNumValue,\n      setValue: setStdNumValue,\n      valueErrMessage: stdNumValueErrMessage,\n      setValueErrMessage: setStdNumValueErrMessage\n    },\n    major: {\n      value: majorValue,\n      setValue: setMajorValue,\n      valueErrMessage: majorValueErrMessage,\n      setValueErrMessage: setMajorValueErrMessage\n    },\n    email: {\n      value: emailValue,\n      setValue: setEmailValue,\n      valueErrMessage: emailValueErrMessage,\n      setValueErrMessage: setEmailValueErrMessage\n    },\n    phoneNumber: {\n      value: phoneNumValue,\n      setValue: setPhoneNumValue,\n      valueErrMessage: phoneNumValueErrMessage,\n      setValueErrMessage: setPhoneNumValueErrMessage\n    }\n  };\n\n  const [loadingState, setLoadingState] = useState(false);\n  const [error, setError] = useState(false);\n\n  const setLoadingStateAndErrorWhenApiCallStart = () => {\n    setLoadingState(true);\n    setError(false);\n  };\n\n  const setLoadingStateAndErrorWhenApiCallSuccess = () => {\n    setLoadingState(false);\n    setError(false);\n    history.push(\"/signin\");\n  };\n\n  const setLoadingStateAndErrorWhenApiCallFailure = () => {\n    setLoadingState(false);\n    setError(true);\n  };\n\n  const handleSubmit = () => {\n    let err = false;\n\n    Object.keys(signupFormData).forEach(key => {\n      if (\n        signupFormData[key].value === \"\" ||\n        signupFormData[key].valueErrMessage\n      )\n        err = true;\n    });\n\n    if (!err) {\n      signUpApi.postSignUp({\n        userInformation: {\n          id: identityValue,\n          password: passwordValue,\n          name: nameValue,\n          birthday: birthdayValue,\n          nickName: nickNameValue,\n          school: schoolValue,\n          studentNumber: stdNumValue,\n          major: majorValue,\n          email: emailValue,\n          phoneNumber: phoneNumValue\n        },\n        apiCallStart: setLoadingStateAndErrorWhenApiCallStart,\n        apiCallSuccess: setLoadingStateAndErrorWhenApiCallSuccess,\n        apiCallFailure: setLoadingStateAndErrorWhenApiCallFailure\n      });\n    }\n  };\n\n  return (\n    <FlexBox wrap=\"wrap\" column=\"column\" align=\"center\" maxHeight createWrapper>\n      <LoadingSpinner loadingState={loadingState}>\n        {error ? (\n          <ErrorPage />\n        ) : (\n          <>\n            <Logo />\n            <SignUpForm\n              signupFormData={signupFormData}\n              handleSubmit={handleSubmit}\n            />\n          </>\n        )}\n      </LoadingSpinner>\n    </FlexBox>\n  );\n};\n\nSignUp.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nexport default SignUp;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Home from \"@material-ui/icons/Home\";\nimport Description from \"@material-ui/icons/Description\";\nimport NoteAdd from \"@material-ui/icons/NoteAdd\";\nimport LibraryBooks from \"@material-ui/icons/LibraryBooks\";\nimport PostAdd from \"@material-ui/icons/PostAdd\";\nimport GroupAdd from \"@material-ui/icons/GroupAdd\";\nimport Group from \"@material-ui/icons/Group\";\n\n// import './DrawerList.css';\n\nconst drawerList = [\n  [\n    {\n      iconComponent: <Home />,\n      text: \"Main\",\n      link: \"/main\",\n      sort: \"user\"\n    }\n  ],\n  // Project drawer list.\n  [\n    {\n      iconComponent: <Description />,\n      text: \"Projects\",\n      link: \"/project/projects\"\n    },\n    {\n      iconComponent: <NoteAdd />,\n      text: \"New Project\",\n      link: \"/project/project/create\"\n    }\n  ],\n  // Exam drawer list.\n  [\n    {\n      iconComponent: <LibraryBooks />,\n      text: \"Exams\",\n      link: \"/exam/exams\",\n      sort: \"user\"\n    },\n    {\n      iconComponent: <PostAdd />,\n      text: \"New Exam\",\n      link: \"/exam/exam/create\",\n      sort: \"user\"\n    }\n  ],\n  // Admin drawer list.\n  [\n    {\n      iconComponent: <GroupAdd />,\n      text: \"Join Requests\",\n      link: \"/admin/joinrequests\",\n      sort: \"admin\"\n    },\n    {\n      iconComponent: <Group />,\n      text: \"Users\",\n      link: \"/admin/users\",\n      sort: \"admin\"\n    }\n  ]\n];\n\nconst drawerListStyles = makeStyles(() => ({\n  drawerWrapperClassName: {\n    width: 240\n  },\n  toolbarClassName: {\n    height: 55\n  }\n}));\n\nconst DrawerList = ({ role }) => {\n  const { drawerWrapperClassName, toolbarClassName } = drawerListStyles();\n\n  return (\n    <div className={`${drawerWrapperClassName} drawer-wrapper`}>\n      <div className={`${toolbarClassName} drawer-wrapper__empty-space`} />\n      <List>\n        {drawerList.map(list =>\n          list.map(({ iconComponent, text, link, sort }, index) => {\n            if (!(sort === \"admin\" && role === \"user\")) {\n              return (\n                <div key={text}>\n                  {/* Check first index for divider */}\n                  {index === 0 ? <Divider /> : <></>}\n                  <ListItem component={Link} to={link} button>\n                    <ListItemIcon>{iconComponent}</ListItemIcon>\n                    <ListItemText primary={text} />\n                  </ListItem>\n                </div>\n              );\n            }\n            return <></>;\n          })\n        )}\n      </List>\n    </div>\n  );\n};\n\nDrawerList.propTypes = {\n  role: PropTypes.string.isRequired\n};\n\nexport default DrawerList;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport DrawerList from \"../DrawerList/DrawerList\";\n\nconst drawerWidth = 240;\n\nconst appBarStyles = makeStyles(theme => ({\n  rootClassName: {\n    display: \"flex\"\n  },\n  drawerClassName: {\n    [theme.breakpoints.up(\"lg\")]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBarClassName: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up(\"lg\")]: {\n      width: `calc(100% - ${drawerWidth}px)`\n    }\n  },\n  menuButtonClassName: {\n    marginRight: 20,\n    [theme.breakpoints.up(\"lg\")]: {\n      display: \"none\"\n    }\n  },\n  toolbarClassName: theme.mixins.toolbar,\n  drawerPaperClassName: {\n    width: drawerWidth\n  },\n  contentClassName: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  titleClassName: {\n    flexGrow: 1\n  },\n  menuItemClassName: () => ({\n    \"&:visited\": {\n      color: \"black\",\n      textDecoration: \"none\"\n    }\n  })\n}));\n\nconst Header = props => {\n  const { children, signOut, userId, role } = props;\n  const {\n    rootClassName,\n    drawerClassName,\n    appBarClassName,\n    menuButtonClassName,\n    toolbarClassName,\n    drawerPaperClassName,\n    contentClassName,\n    titleClassName,\n    menuItemClassName\n  } = appBarStyles();\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const accountCircleMenuOpen = Boolean(anchorEl);\n\n  const handleDrawerToggleOpen = () => setDrawerOpen(true);\n  const handleDrawerToggleClose = () => setDrawerOpen(false);\n\n  const handleAccountCircleMenuOpen = event => setAnchorEl(event.currentTarget);\n  const handleAccountCircleMenuClose = () => setAnchorEl(null);\n\n  const signOutHandler = () => signOut();\n\n  return (\n    <div className={`${rootClassName} app-bar-wrapper`}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={`${appBarClassName} app-bar-wrapper__app-bar`}\n      >\n        <Toolbar className=\"app-bar-wrapper__app-bar__tool-bar\">\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"Open drawer\"\n            onClick={handleDrawerToggleOpen}\n            className={`${menuButtonClassName} app-bar-wrapper__app-bar__tool-bar__icon-button`}\n          >\n            <MenuIcon className=\"app-bar-wrapper__app-bar__tool-bar__icon-button__icon\" />\n          </IconButton>\n          <Typography\n            variant=\"h6\"\n            color=\"inherit\"\n            className={`${titleClassName} app-bar-wrapper__app-bar__tool-bar__title`}\n            noWrap\n          >\n            TCP WEB\n          </Typography>\n          <div className=\"app-bar-wrapper__app-bar__tool-bar__account-circle\">\n            <IconButton\n              aria-owns={accountCircleMenuOpen ? \"menu-appbar\" : undefined}\n              aria-haspopup=\"true\"\n              onClick={handleAccountCircleMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n            <Menu\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\"\n              }}\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\"\n              }}\n              open={accountCircleMenuOpen}\n              onClose={handleAccountCircleMenuClose}\n            >\n              <MenuItem\n                className={menuItemClassName}\n                component={Link}\n                to={`/user/${userId}`}\n                onClick={handleAccountCircleMenuClose}\n              >\n                My profile\n              </MenuItem>\n              <MenuItem\n                className={menuItemClassName}\n                component={Link}\n                to=\"/\"\n                onClick={() => {\n                  handleAccountCircleMenuClose();\n                  signOutHandler();\n                }}\n              >\n                Logout\n              </MenuItem>\n            </Menu>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <nav className={`${drawerClassName} app-bar-wrapper__drawer-wrapper`}>\n        {/* Width is smaller than 1280px */}\n        <Hidden\n          className=\"app-bar-wrapper__drawer-wrapper__hidden--md-up\"\n          implementation=\"css\"\n          mdUp\n        >\n          <Drawer\n            variant=\"temporary\"\n            anchor=\"left\"\n            open={drawerOpen}\n            onClose={handleDrawerToggleOpen}\n            onClick={handleDrawerToggleClose}\n            className={`${drawerPaperClassName} app-bar-wrapper__drawer-wrapper__hidden--md-up__drawer drawer-wrapper`}\n            // Better open performance on mobile.\n            ModalProps={{ keepMounted: true }}\n          >\n            <DrawerList role={role} />\n          </Drawer>\n        </Hidden>\n        {/* Width is bigger then 1280px */}\n        <Hidden\n          className=\"app-bar-wrapper__drawer-wrapper__hidden--md-down\"\n          implementation=\"css\"\n          mdDown\n        >\n          <Drawer\n            className={`${drawerPaperClassName} app-bar-wrapper__drawer-wrapper__hidden--md-down__drawer drawer-wrapper`}\n            variant=\"permanent\"\n            open\n          >\n            <DrawerList role={role} />\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={`${contentClassName} app-bar-wrapper__main`}>\n        <div\n          className={`${toolbarClassName} app-bar-wrapper__main__tool-bar`}\n        />\n        {children}\n      </main>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.array])\n    .isRequired,\n  signOut: PropTypes.func.isRequired,\n  userId: PropTypes.string.isRequired,\n  role: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Main = () => {\n  return (\n    <div>\n      <h1>welcom</h1>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst rows = [\n  {\n    id: \"projectName\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Project Name\"\n  },\n  {\n    id: \"projectLeader\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Project Leader\"\n  }\n];\n\nconst EnhancedTableHead = () => (\n  <TableHead>\n    <TableRow role=\"checkbox\">\n      {rows.map(row => (\n        <TableCell key={row.id} align=\"center\">\n          {row.label}\n        </TableCell>\n      ))}\n    </TableRow>\n  </TableHead>\n);\n\nconst ProjectsTableStyles = makeStyles(theme => ({\n  rootClassName: {\n    width: \"100%\",\n    marginTop: theme.spacing(3)\n  },\n  tableClassName: {\n    minWidth: 400\n  },\n  tableWrapperClassName: {\n    overflowX: \"auto\"\n  },\n  tableRowClassName: {\n    cursor: \"pointer\"\n  }\n}));\n\nconst ProjectsTable = props => {\n  const {\n    data,\n    page,\n    count,\n    rowsPerPage,\n    handlePageChange,\n    moveToProjectPage\n  } = props;\n  const {\n    rootClassName,\n    tableClassName,\n    tableWrapperClassName,\n    tableRowClassName\n  } = ProjectsTableStyles();\n  const emptyRows = rowsPerPage - data.length;\n\n  return (\n    <Paper className={rootClassName}>\n      <div className={tableWrapperClassName}>\n        <Table className={tableClassName} aria-labelledby=\"tableTitle\">\n          <EnhancedTableHead rowCount={rowsPerPage} />\n          <TableBody>\n            {data.map(project => (\n              <TableRow\n                hover\n                key={project.projectId}\n                className={tableRowClassName}\n                onClick={() => moveToProjectPage(project.projectId)}\n              >\n                <TableCell align=\"center\">{project.projectName}</TableCell>\n                <TableCell align=\"center\">{project.projectLeader}</TableCell>\n              </TableRow>\n            ))}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 49 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n      <TablePagination\n        rowsPerPageOptions={[]}\n        component=\"div\"\n        count={count}\n        page={page}\n        rowsPerPage={rowsPerPage}\n        onChangePage={handlePageChange}\n        backIconButtonProps={{ \"aria-label\": \"Previous Page\" }}\n        nextIconButtonProps={{ \"aria-label\": \"Next Page\" }}\n      />\n    </Paper>\n  );\n};\n\nProjectsTable.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      projectId: PropTypes.string.isRequired,\n      projectName: PropTypes.string.isRequired,\n      projectLeader: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  page: PropTypes.number.isRequired,\n  count: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  moveToProjectPage: PropTypes.func.isRequired,\n  handlePageChange: PropTypes.func.isRequired\n};\n\nexport default ProjectsTable;\n","import fetchHelper from \"../../../helpers/fakeFetchHelper\";\n\nconst getProjects = async ({\n  rowsPerPage = 10,\n  page = 0,\n  sort = \"asc\",\n  apiCallStart,\n  apiCallSuccess,\n  apiCallFailure\n}) => {\n  const apiResponse = {\n    success: true,\n    projects: [\n      {\n        projectId: \"1\",\n        projectName: \"mozzi_front\",\n        projectLeader: \"강민준\"\n      },\n      {\n        projectId: \"2\",\n        projectName: \"toefl-server\",\n        projectLeader: \"이서준\"\n      },\n      {\n        projectId: \"3\",\n        projectName: \"toefl-front\",\n        projectLeader: \"정예준\"\n      },\n      {\n        projectId: \"4\",\n        projectName: \"iamlazy-front\",\n        projectLeader: \"김도윤\"\n      },\n      {\n        projectId: \"5\",\n        projectName: \"LazyPeoplesProject\",\n        projectLeader: \"이시우\"\n      },\n      {\n        projectId: \"6\",\n        projectName: \"hangman\",\n        projectLeader: \"김주원\"\n      },\n      {\n        projectId: \"7\",\n        projectName: \"thisable\",\n        projectLeader: \"전소율\"\n      },\n      {\n        projectId: \"8\",\n        projectName: \"ssonga\",\n        projectLeader: \"윤지호\"\n      },\n      {\n        projectId: \"9\",\n        projectName: \"artemis\",\n        projectLeader: \"임현우\"\n      },\n      {\n        projectId: \"10\",\n        projectName: \"isEmpty\",\n        projectLeader: \"고연우\"\n      }\n    ],\n    page,\n    count: rowsPerPage,\n    total: 12\n  };\n\n  await apiCallStart();\n\n  await fetchHelper\n    .get(\n      `/project?limit=${rowsPerPage}&page=${page}&sort=${sort}`,\n      null,\n      apiResponse\n    )\n    .then(response => apiCallSuccess(response))\n    .catch(() => apiCallFailure());\n};\n\nexport default getProjects;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ProjectsTable from \"../../../components/ProjectsTable/ProjectsTable\";\nimport LoadingSpinner from \"../../../components/LoadingSpinner/LoadingSpinner\";\nimport ErrorPage from \"../../Pages/ErrorPage/ErrorPage\";\nimport getProjects from \"./projectsApi\";\n\nconst Projects = props => {\n  const { history } = props;\n  const [projects, setProjects] = useState([\n    {\n      projectId: \"\",\n      projectName: \"\",\n      projectLeader: \"\"\n    }\n  ]);\n  const [page, setPage] = useState(0);\n  const [count, setCount] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(0);\n  const [loadingState, setLoadingState] = useState(false);\n  const [error, setError] = useState(false);\n\n  const setLoadingStateAndErrorWhenApiCallStart = () => {\n    setLoadingState(true);\n    setError(false);\n  };\n\n  const setLoadingStateAndErrorWhenApiCallSuccess = response => {\n    setProjects([...response.projects]);\n    setPage(response.page);\n    setCount(response.total);\n    setRowsPerPage(response.count);\n    setLoadingState(false);\n    setError(false);\n  };\n\n  const setLoadingStateAndErrorWhenApiCallFailure = () => {\n    setLoadingState(false);\n    setError(true);\n  };\n\n  const moveToProjectPage = projectId => {\n    history.push(`/project/project/${projectId}`);\n  };\n\n  const handlePageChange = (event, newPage = 0) => {\n    getProjects({\n      page: newPage,\n      apiCallStart: setLoadingStateAndErrorWhenApiCallStart,\n      apiCallSuccess: setLoadingStateAndErrorWhenApiCallSuccess,\n      apiCallFailure: setLoadingStateAndErrorWhenApiCallFailure\n    });\n  };\n\n  // Component did mount\n  useEffect(handlePageChange, []);\n\n  return (\n    <div>\n      <div>Projects</div>\n      <LoadingSpinner loadingState={loadingState}>\n        {error ? (\n          <ErrorPage />\n        ) : (\n          <ProjectsTable\n            data={projects}\n            page={page}\n            count={count}\n            rowsPerPage={rowsPerPage}\n            moveToProjectPage={moveToProjectPage}\n            handlePageChange={handlePageChange}\n          />\n        )}\n      </LoadingSpinner>\n    </div>\n  );\n};\n\nProjects.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nexport default Projects;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst ContentValueInputBoxStyles = makeStyles(() => ({\n  inputBoxClassName: {\n    paddingBottom: \"10px\"\n  }\n}));\n\nconst ContentValueInputBox = props => {\n  const { value, setValue, valueErrMessage, setValueErrMessage, rows } = props;\n  const { inputBoxClassName } = ContentValueInputBoxStyles();\n\n  const contentValueCheck = targetValue => {\n    const contentValueIsEmpty = targetValue === \"\";\n    if (contentValueIsEmpty) return \"Please fill content\";\n\n    return \"\";\n  };\n  const handleNameValue = event => {\n    setValue(event.target.value);\n    setValueErrMessage(contentValueCheck(event.target.value));\n  };\n\n  return (\n    <TextField\n      className={`${inputBoxClassName}`}\n      label=\"Content\"\n      type=\"string\"\n      value={value}\n      onChange={handleNameValue}\n      error={!!valueErrMessage}\n      helperText={valueErrMessage || \" \"}\n      multiline\n      rows={rows}\n      fullWidth\n    />\n  );\n};\n\nContentValueInputBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  setValue: PropTypes.func.isRequired,\n  valueErrMessage: PropTypes.string.isRequired,\n  setValueErrMessage: PropTypes.func.isRequired,\n  rows: PropTypes.string\n};\n\nContentValueInputBox.defaultProps = {\n  rows: \"20\"\n};\n\nexport default ContentValueInputBox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nimport NameValueInputBox from \"../InputBoxes/NameValueInputBox/NameValueInputBox\";\nimport ContentValueInputBox from \"../InputBoxes/ContentValueInputBox/ContentValueInputBox\";\n\nconst projectEditFormStyles = makeStyles(() => ({\n  inputBoxWrapperClassName: {\n    marginBottom: \"10px\"\n  },\n  buttonWrapperClassName: {\n    textAlign: \"right\"\n  }\n}));\n\nconst ProjectEditForm = props => {\n  const { projectFormData, handleSubmit } = props;\n  const {\n    inputBoxWrapperClassName,\n    buttonWrapperClassName\n  } = projectEditFormStyles();\n\n  const validationCheckAndHandleSubmit = event => {\n    // Prevent browers refresh.\n    event.preventDefault();\n    handleSubmit();\n  };\n\n  return (\n    <div className={`project-edit-form ${inputBoxWrapperClassName}`}>\n      <form\n        className=\"project-edit-form__form\"\n        onSubmit={validationCheckAndHandleSubmit}\n      >\n        <NameValueInputBox\n          value={projectFormData.projectName.value}\n          setValue={projectFormData.projectName.setValue}\n          valueErrMessage={projectFormData.projectName.valueErrMessage}\n          setValueErrMessage={projectFormData.projectName.setValueErrMessage}\n          label=\"Project name\"\n        />\n        <NameValueInputBox\n          value={projectFormData.projectLeader.value}\n          setValue={projectFormData.projectLeader.setValue}\n          valueErrMessage={projectFormData.projectLeader.valueErrMessage}\n          setValueErrMessage={projectFormData.projectLeader.setValueErrMessage}\n          label=\"Project leader\"\n        />\n        <ContentValueInputBox\n          value={projectFormData.projectContent.value}\n          setValue={projectFormData.projectContent.setValue}\n          valueErrMessage={projectFormData.projectContent.valueErrMessage}\n          setValueErrMessage={projectFormData.projectContent.setValueErrMessage}\n        />\n        <div className={buttonWrapperClassName}>\n          <Button\n            className=\"submit-button\"\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nProjectEditForm.propTypes = {\n  projectFormData: PropTypes.shape({\n    projectName: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired\n    }).isRequired,\n    projectLeader: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired\n    }).isRequired,\n    projectContent: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired\n    }).isRequired\n  }).isRequired,\n  handleSubmit: PropTypes.func.isRequired\n};\n\nexport default ProjectEditForm;\n","import fetchHelper from \"../../../helpers/fakeFetchHelper\";\n\nexport const getProject = async ({\n  projectId,\n  apiCallStart,\n  apiCallSuccess,\n  apiCallFailure\n}) => {\n  const apiResponse = {\n    success: true,\n    project: {\n      projectId: \"13\",\n      projectName: \"mozzi_front\",\n      projectLeader: \"userAbc\",\n      projectContent:\n        \"Pellentesque consectetur, lorem nec lacinia tincidunt, mauris tortor suscipit tortor, quis molestie felis ipsum in ante. Fusce viverra tortor vitae ante tincidunt, eu scelerisque elit laoreet. Proin eu ligula sed neque porta dictum. Duis nec cursus leo. In sit amet lacus suscipit purus malesuada molestie sit amet nec urna. Quisque non accumsan odio. Mauris ut velit nec dui pulvinar sollicitudin. Nulla facilisi. Phasellus ac neque magna. Sed leo diam, rutrum nec aliquet at, aliquet non nisl. Integer tristique urna eget suscipit sollicitudin. Vivamus libero odio, dapibus vitae varius quis, varius vitae arcu. Aenean sed turpis et lacus placerat aliquet.\",\n      projectIssues: [\n        {\n          issueId: \"1\",\n          issueName: \"issue1\",\n          issueContent:\n            \"Vestibulum nunc dolor, semper quis sodales a, accumsan gravida dolor. Mauris at justo eu neque sollicitudin placerat. Nunc interdum consectetur tincidunt. Ut imperdiet semper est, eget molestie lectus. Vestibulum massa ante, consequat eget ullamcorper ut, porta non augue. Maecenas quis pharetra nisi, a imperdiet orci. Mauris ac nunc non turpis vehicula maximus.\"\n        },\n        {\n          issueId: \"2\",\n          issueName: \"issue2\",\n          issueContent:\n            \"Fusce id lobortis lectus. Nullam eu felis leo. Etiam vitae tortor quis lacus mollis tempus. Donec varius mauris eget metus volutpat, id hendrerit mauris efficitur. Praesent nulla nunc, hendrerit non imperdiet vitae, ultricies sed nibh. Proin sagittis elit ut accumsan ultrices. Donec vehicula erat nec lectus mattis, ut bibendum velit vestibulum. Nunc tincidunt erat vel ipsum varius, a pharetra orci mollis. Fusce varius cursus faucibus. Etiam commodo efficitur nulla, sed mattis ante finibus id.\"\n        },\n        {\n          issueId: \"3\",\n          issueName: \"issue3\",\n          issueContent:\n            \"Proin at mattis velit. Donec euismod purus ac nisi ornare, at iaculis libero tincidunt. Curabitur ut sapien arcu. Phasellus placerat nisi non libero lobortis commodo non et nisi. Integer viverra fermentum nisl vel congue. Donec dapibus venenatis dolor, vel sollicitudin lectus ultricies eget. Suspendisse tristique eget metus nec aliquet. Nunc sed turpis at dolor dignissim porttitor. Sed tincidunt aliquet odio, sed ornare ipsum pretium suscipit. Suspendisse purus massa, malesuada ac commodo ut, vehicula vitae neque. Vivamus cursus nec tortor nec dapibus. Curabitur cursus, ligula nec cursus convallis, ex justo faucibus purus, eu sollicitudin erat enim et sem. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae;\"\n        },\n        {\n          issueId: \"4\",\n          issueName: \"issue4\",\n          issueContent:\n            \"Duis at ante non augue ultricies ornare at ut purus. Sed nisi ipsum, fermentum in enim at, luctus vestibulum ipsum. Donec tincidunt nunc ac est ullamcorper fermentum. Curabitur justo odio, iaculis a tellus id, accumsan posuere elit. Nunc vel euismod erat, feugiat auctor justo. Fusce fermentum finibus leo non vestibulum. Quisque malesuada nisi ac felis eleifend luctus. Phasellus rhoncus pharetra massa, et sollicitudin lorem aliquam et. Ut sapien ex, scelerisque eget neque ut, efficitur elementum ligula. Donec eu enim dui. Etiam vitae metus id enim auctor porta hendrerit quis diam.\"\n        },\n        {\n          issueId: \"5\",\n          issueName: \"issue5\",\n          issueContent:\n            \"Curabitur arcu leo, hendrerit ac ullamcorper eget, pretium quis nunc. Suspendisse vel ipsum eleifend augue bibendum vestibulum. Etiam malesuada nibh et lorem porttitor ultricies. Vivamus mattis, lectus sit amet dapibus aliquam, sem justo vulputate felis, eu finibus nibh dolor vel dui. Donec molestie porttitor nibh, id tristique lacus facilisis id. Morbi condimentum mi nec tellus laoreet dictum. Vivamus orci quam, convallis quis erat et, vehicula fermentum risus. Duis et scelerisque dui. Quisque ultricies dui ut risus iaculis, pellentesque lacinia tortor vulputate.\"\n        }\n      ]\n    }\n  };\n\n  await apiCallStart();\n\n  await fetchHelper\n    .get(`/project/${projectId}`, null, apiResponse)\n    .then(response => apiCallSuccess(response))\n    .catch(() => apiCallFailure());\n};\n\nexport const putProject = async ({\n  projectId,\n  projectInformation,\n  apiCallStart,\n  apiCallSuccess,\n  apiCallFailure\n}) => {\n  const apiResponse = { success: true };\n\n  await apiCallStart();\n\n  await fetchHelper\n    .put(`/project/${projectId}`, projectInformation, apiResponse)\n    .then(() => apiCallSuccess())\n    .catch(() => apiCallFailure());\n};\n\nexport const postProject = async ({\n  projectInformation,\n  apiCallStart,\n  apiCallSuccess,\n  apiCallFailure\n}) => {\n  const apiResponse = { success: true };\n\n  await apiCallStart();\n\n  await fetchHelper\n    .post(`/project`, projectInformation, apiResponse)\n    .then(() => apiCallSuccess())\n    .catch(() => apiCallFailure());\n};\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ProjectEditForm from \"../../../components/ProjectEditForm/ProjectEditForm\";\nimport ErrorPage from \"../../Pages/ErrorPage/ErrorPage\";\nimport LoadingSpinner from \"../../../components/LoadingSpinner/LoadingSpinner\";\nimport * as projectEditApi from \"./projectEditApi\";\n\nconst ProjectEdit = props => {\n  const { history, match } = props;\n  const { projectId } = match.params;\n\n  const [projectName, setProjectName] = useState(\"\");\n  const [projectNameErrMessage, setProjectNameErrMessage] = useState(\"\");\n\n  const [projectLeader, setProjectLeader] = useState(\"\");\n  const [projectLeaderErrMessage, setProjectLeaderErrMessage] = useState(\"\");\n\n  const [projectContent, setProjectContent] = useState(\"\");\n  const [projectContentErrMessage, setProjectContentErrMessage] = useState(\"\");\n\n  const projectFormData = {\n    projectName: {\n      value: projectName,\n      setValue: setProjectName,\n      valueErrMessage: projectNameErrMessage,\n      setValueErrMessage: setProjectNameErrMessage\n    },\n    projectLeader: {\n      value: projectLeader,\n      setValue: setProjectLeader,\n      valueErrMessage: projectLeaderErrMessage,\n      setValueErrMessage: setProjectLeaderErrMessage\n    },\n    projectContent: {\n      value: projectContent,\n      setValue: setProjectContent,\n      valueErrMessage: projectContentErrMessage,\n      setValueErrMessage: setProjectContentErrMessage\n    }\n  };\n\n  const [loadingState, setLoadingState] = useState(false);\n  const [error, setError] = useState(false);\n\n  const setStateApiCallStart = () => {\n    setLoadingState(true);\n    setError(false);\n  };\n\n  const setStateGetProjectInformationSuccess = response => {\n    setProjectName(response.project.projectName);\n    setProjectLeader(response.project.projectLeader);\n    setProjectContent(response.project.projectContent);\n    setLoadingState(false);\n    setError(false);\n  };\n\n  const setStateGetProjectInformationFailure = () => {\n    setLoadingState(false);\n    setError(true);\n  };\n\n  const setStateHandleSubmitSuccess = () => {\n    setLoadingState(false);\n    setError(false);\n\n    if (projectId) {\n      history.push(`/project/project/${projectId}`);\n    } else {\n      history.push(\"/project/projects\");\n    }\n  };\n\n  const setStateHandleSubmitFailure = () => {\n    setLoadingState(false);\n    setError(true);\n  };\n\n  const getProjectInformation = () => {\n    if (projectId) {\n      projectEditApi.getProject({\n        projectId,\n        apiCallStart: setStateApiCallStart,\n        apiCallSuccess: setStateGetProjectInformationSuccess,\n        apiCallFailure: setStateGetProjectInformationFailure\n      });\n    }\n  };\n\n  const handleSubmit = () => {\n    let err = false;\n\n    Object.keys(projectFormData).forEach(key => {\n      if (\n        projectFormData[key].value === \"\" ||\n        projectFormData[key].valueErrMessage\n      )\n        err = true;\n    });\n\n    if (!err) {\n      const projectInformation = {\n        projectId,\n        projectName,\n        projectLeader,\n        projectContent\n      };\n      if (projectId) {\n        projectEditApi.putProject({\n          projectInformation,\n          apiCallStart: setStateApiCallStart,\n          apiCallSuccess: setStateHandleSubmitSuccess,\n          apiCallFailure: setStateHandleSubmitFailure\n        });\n      } else {\n        projectEditApi.postProject({\n          projectInformation,\n          apiCallStart: setStateApiCallStart,\n          apiCallSuccess: setStateHandleSubmitSuccess,\n          apiCallFailure: setStateHandleSubmitFailure\n        });\n      }\n    }\n  };\n\n  // Component did mount.\n  useEffect(getProjectInformation, []);\n\n  return (\n    <LoadingSpinner loadingState={loadingState}>\n      {error ? (\n        <ErrorPage />\n      ) : (\n        <ProjectEditForm\n          projectFormData={projectFormData}\n          handleSubmit={handleSubmit}\n        />\n      )}\n    </LoadingSpinner>\n  );\n};\n\nProjectEdit.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      projectId: PropTypes.string\n    })\n  })\n};\n\nProjectEdit.defaultProps = {\n  match: { params: { projectId: \"\" } }\n};\n\nexport default ProjectEdit;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { AccessibilityNew, Description, MenuBook } from \"@material-ui/icons\";\n\nconst createProjectInformationRow = (icon, dataName, data) => {\n  return { icon, dataName, data };\n};\n\nconst createTableRows = projectInformation => [\n  createProjectInformationRow(\n    Description,\n    \"Project Name\",\n    projectInformation.projectName\n  ),\n  createProjectInformationRow(\n    AccessibilityNew,\n    \"Project Leader\",\n    projectInformation.projectLeader\n  ),\n  createProjectInformationRow(\n    MenuBook,\n    \"Project dicription\",\n    projectInformation.projectContent\n  )\n];\n\nconst projectInformationStyles = makeStyles(theme => ({\n  rootClassName: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    marginBottom: \"10px\"\n  },\n  buttonWrapperClassName: {\n    textAlign: \"right\",\n    marginBottom: \"10px\"\n  },\n  deleteButtonClassName: {\n    marginRight: \"10px\"\n  }\n}));\n\nconst ProjectInformation = props => {\n  const {\n    rootClassName,\n    buttonWrapperClassName,\n    deleteButtonClassName\n  } = projectInformationStyles();\n  const {\n    projectInformation,\n    selfIdentification,\n    deleteProject,\n    projectInformationEditPageUrl\n  } = props;\n  const tableRow = createTableRows(projectInformation);\n\n  return (\n    <>\n      <List className={rootClassName}>\n        {tableRow.map(row => (\n          <Fragment key={row.dataName}>\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar>\n                  <row.icon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={row.dataName} secondary={row.data} />\n            </ListItem>\n            <Divider variant=\"inset\" component=\"li\" />\n          </Fragment>\n        ))}\n      </List>\n      {selfIdentification ? (\n        <div className={`button-wrapper ${buttonWrapperClassName}`}>\n          <Button\n            className={`button-wrapper__delete-button ${deleteButtonClassName}`}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => deleteProject()}\n          >\n            Delete\n          </Button>\n          <Button\n            className=\"button-wrapper__edit-button\"\n            variant=\"contained\"\n            color=\"primary\"\n            component={Link}\n            to={projectInformationEditPageUrl}\n          >\n            Edit\n          </Button>\n        </div>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nProjectInformation.propTypes = {\n  projectInformation: PropTypes.shape({\n    projectId: PropTypes.string.isRequired,\n    projectName: PropTypes.string.isRequired,\n    projectLeader: PropTypes.string.isRequired\n  }).isRequired,\n  selfIdentification: PropTypes.bool.isRequired,\n  deleteProject: PropTypes.func.isRequired,\n  projectInformationEditPageUrl: PropTypes.string.isRequired\n};\n\nexport default ProjectInformation;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Build from \"@material-ui/icons/Build\";\nimport Delete from \"@material-ui/icons/Delete\";\n\nconst ProjectIssueList = props => {\n  const { projectIssues, selfIdentification, deleteIssue } = props;\n\n  return (\n    <>\n      <Typography variant=\"h6\">Project Issues</Typography>\n      {projectIssues ? (\n        <div>\n          <List dense>\n            {projectIssues.map(element => (\n              <ListItem key={element.issueId}>\n                <ListItemAvatar>\n                  <Avatar>\n                    <Build />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={element.issueName}\n                  secondary={element.issueContent}\n                />\n                {selfIdentification ? (\n                  <ListItemSecondaryAction>\n                    <IconButton\n                      onClick={() => deleteIssue(projectIssues.issueId)}\n                      edge=\"end\"\n                      aria-label=\"delete\"\n                    >\n                      <Delete />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                ) : (\n                  <></>\n                )}\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      ) : (\n        <Typography>There is no project issues</Typography>\n      )}\n    </>\n  );\n};\n\nProjectIssueList.propTypes = {\n  projectIssues: PropTypes.arrayOf(\n    PropTypes.shape({\n      issueId: PropTypes.string.isRequired,\n      issueName: PropTypes.string.isRequired,\n      issueContent: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  selfIdentification: PropTypes.bool.isRequired,\n  deleteIssue: PropTypes.func.isRequired\n};\n\nexport default ProjectIssueList;\n","import fetchHelper from \"../../../helpers/fakeFetchHelper\";\n\nexport const getProject = async ({\n  projectId,\n  apiCallStart,\n  apiCallSuccess,\n  apiCallFailure\n}) => {\n  const apiResponse = {\n    success: true,\n    project: {\n      projectId: \"13\",\n      projectName: \"mozzi_front\",\n      projectLeader: \"userAbc\",\n      projectContent:\n        \"Pellentesque consectetur, lorem nec lacinia tincidunt, mauris tortor suscipit tortor, quis molestie felis ipsum in ante. Fusce viverra tortor vitae ante tincidunt, eu scelerisque elit laoreet. Proin eu ligula sed neque porta dictum. Duis nec cursus leo. In sit amet lacus suscipit purus malesuada molestie sit amet nec urna. Quisque non accumsan odio. Mauris ut velit nec dui pulvinar sollicitudin. Nulla facilisi. Phasellus ac neque magna. Sed leo diam, rutrum nec aliquet at, aliquet non nisl. Integer tristique urna eget suscipit sollicitudin. Vivamus libero odio, dapibus vitae varius quis, varius vitae arcu. Aenean sed turpis et lacus placerat aliquet.\",\n      projectIssues: [\n        {\n          issueId: \"1\",\n          issueName: \"issue1\",\n          issueContent:\n            \"Vestibulum nunc dolor, semper quis sodales a, accumsan gravida dolor. Mauris at justo eu neque sollicitudin placerat. Nunc interdum consectetur tincidunt. Ut imperdiet semper est, eget molestie lectus. Vestibulum massa ante, consequat eget ullamcorper ut, porta non augue. Maecenas quis pharetra nisi, a imperdiet orci. Mauris ac nunc non turpis vehicula maximus.\"\n        },\n        {\n          issueId: \"2\",\n          issueName: \"issue2\",\n          issueContent:\n            \"Fusce id lobortis lectus. Nullam eu felis leo. Etiam vitae tortor quis lacus mollis tempus. Donec varius mauris eget metus volutpat, id hendrerit mauris efficitur. Praesent nulla nunc, hendrerit non imperdiet vitae, ultricies sed nibh. Proin sagittis elit ut accumsan ultrices. Donec vehicula erat nec lectus mattis, ut bibendum velit vestibulum. Nunc tincidunt erat vel ipsum varius, a pharetra orci mollis. Fusce varius cursus faucibus. Etiam commodo efficitur nulla, sed mattis ante finibus id.\"\n        },\n        {\n          issueId: \"3\",\n          issueName: \"issue3\",\n          issueContent:\n            \"Proin at mattis velit. Donec euismod purus ac nisi ornare, at iaculis libero tincidunt. Curabitur ut sapien arcu. Phasellus placerat nisi non libero lobortis commodo non et nisi. Integer viverra fermentum nisl vel congue. Donec dapibus venenatis dolor, vel sollicitudin lectus ultricies eget. Suspendisse tristique eget metus nec aliquet. Nunc sed turpis at dolor dignissim porttitor. Sed tincidunt aliquet odio, sed ornare ipsum pretium suscipit. Suspendisse purus massa, malesuada ac commodo ut, vehicula vitae neque. Vivamus cursus nec tortor nec dapibus. Curabitur cursus, ligula nec cursus convallis, ex justo faucibus purus, eu sollicitudin erat enim et sem. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae;\"\n        },\n        {\n          issueId: \"4\",\n          issueName: \"issue4\",\n          issueContent:\n            \"Duis at ante non augue ultricies ornare at ut purus. Sed nisi ipsum, fermentum in enim at, luctus vestibulum ipsum. Donec tincidunt nunc ac est ullamcorper fermentum. Curabitur justo odio, iaculis a tellus id, accumsan posuere elit. Nunc vel euismod erat, feugiat auctor justo. Fusce fermentum finibus leo non vestibulum. Quisque malesuada nisi ac felis eleifend luctus. Phasellus rhoncus pharetra massa, et sollicitudin lorem aliquam et. Ut sapien ex, scelerisque eget neque ut, efficitur elementum ligula. Donec eu enim dui. Etiam vitae metus id enim auctor porta hendrerit quis diam.\"\n        },\n        {\n          issueId: \"5\",\n          issueName: \"issue5\",\n          issueContent:\n            \"Curabitur arcu leo, hendrerit ac ullamcorper eget, pretium quis nunc. Suspendisse vel ipsum eleifend augue bibendum vestibulum. Etiam malesuada nibh et lorem porttitor ultricies. Vivamus mattis, lectus sit amet dapibus aliquam, sem justo vulputate felis, eu finibus nibh dolor vel dui. Donec molestie porttitor nibh, id tristique lacus facilisis id. Morbi condimentum mi nec tellus laoreet dictum. Vivamus orci quam, convallis quis erat et, vehicula fermentum risus. Duis et scelerisque dui. Quisque ultricies dui ut risus iaculis, pellentesque lacinia tortor vulputate.\"\n        }\n      ]\n    }\n  };\n\n  await apiCallStart();\n\n  await fetchHelper\n    .get(`/project/${projectId}`, null, apiResponse)\n    .then(response => apiCallSuccess(response))\n    .catch(() => apiCallFailure());\n};\n\nexport const deleteProject = async ({\n  projectId,\n  apiCallStart,\n  apiCallSuccess,\n  apiCallFailure\n}) => {\n  const apiResponse = { success: true };\n\n  await apiCallStart();\n\n  await fetchHelper\n    .delete(`/project/${projectId}`, null, apiResponse)\n    .then(() => apiCallSuccess())\n    .catch(() => apiCallFailure());\n};\n\nexport const deleteIssue = async ({\n  issueId,\n  apiCallStart,\n  apiCallSuccess,\n  apiCallFailure\n}) => {\n  const apiResponse = { success: true };\n\n  await apiCallStart();\n\n  await fetchHelper\n    .delete(`/project/issue/${issueId}`, null, apiResponse)\n    .then(() => apiCallSuccess())\n    .catch(() => apiCallFailure());\n};\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport ProjectInformation from \"../../../components/ProjectInformation/ProjectInformation\";\nimport ProjectIssueList from \"../../../components/ProjectIssueList/ProjectIssueList\";\nimport LoadingSpinner from \"../../../components/LoadingSpinner/LoadingSpinner\";\nimport ErrorPage from \"../../Pages/ErrorPage/ErrorPage\";\nimport * as projectApi from \"./projectApi\";\n\nconst Project = props => {\n  const { myId, match, history } = props;\n  const { projectId } = match.params;\n  const [project, setProject] = useState({\n    projectId: \"\",\n    projectName: \"\",\n    projectLeader: \"\",\n    projectContent: \"\"\n  });\n  const [projectIssues, setProjectIssues] = useState([\n    { issueId: \"\", issueName: \"\", issueContent: \"\" }\n  ]);\n  const [selfIdentification, setSelfIdentification] = useState(false);\n  const [loadingState, setLoadingState] = useState(false);\n  const [error, setError] = useState(false);\n\n  const setLoadingStateAndErrorWhenApiCallStart = () => {\n    setLoadingState(true);\n    setError(false);\n  };\n\n  const setLoadingStateAndErrorWhenApiCallSuccess = response => {\n    setProject(response.project);\n    setProjectIssues([...response.project.projectIssues]);\n    // Check self identification for edit and delete button.\n    if (response.project.projectLeader === myId) setSelfIdentification(true);\n    setLoadingState(false);\n    setError(false);\n  };\n\n  const setLoadingStateAndErrorWhenApiCallFailure = () => {\n    setLoadingState(false);\n    setError(true);\n  };\n\n  const getProject = () => {\n    projectApi.getProject({\n      projectId,\n      apiCallStart: setLoadingStateAndErrorWhenApiCallStart,\n      apiCallSuccess: setLoadingStateAndErrorWhenApiCallSuccess,\n      apiCallFailure: setLoadingStateAndErrorWhenApiCallFailure\n    });\n  };\n\n  const deleteProject = () => {\n    projectApi.deleteProject({\n      projectId,\n      apiCallStart: setLoadingStateAndErrorWhenApiCallStart,\n      apiCallSuccess: () => history.replace(\"/project/projects\"),\n      apiCallFailure: setLoadingStateAndErrorWhenApiCallFailure\n    });\n  };\n\n  const deleteIssue = issueId => {\n    projectApi.deleteIssue({\n      issueId,\n      apiCallStart: setLoadingStateAndErrorWhenApiCallStart,\n      apiCallSuccess: getProject,\n      apiCallFailure: setLoadingStateAndErrorWhenApiCallFailure\n    });\n  };\n\n  useEffect(getProject, []);\n\n  return (\n    <div>\n      <div>Project</div>\n      <LoadingSpinner loadingState={loadingState}>\n        {error ? (\n          <ErrorPage />\n        ) : (\n          <>\n            <ProjectInformation\n              selfIdentification={selfIdentification}\n              projectInformation={project}\n              deleteProject={deleteProject}\n              projectInformationEditPageUrl={`/project/project/${projectId}/edit`}\n            />\n            <ProjectIssueList\n              selfIdentification={selfIdentification}\n              projectIssues={projectIssues}\n              deleteIssue={deleteIssue}\n            />\n          </>\n        )}\n      </LoadingSpinner>\n    </div>\n  );\n};\n\nProject.propTypes = {\n  myId: PropTypes.string.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      projectId: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired,\n  history: PropTypes.shape({\n    replace: PropTypes.func.isRequired\n  }).isRequired\n};\n\nconst mapStateToProps = state => {\n  const { auth } = state;\n  return { myId: auth.userId };\n};\n\nexport default connect(mapStateToProps)(Project);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst examsTableRows = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Exam name\"\n  },\n  {\n    id: \"major\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Major\"\n  },\n  {\n    id: \"year\",\n    numeric: true,\n    disablePadding: false,\n    label: \"year\"\n  },\n  {\n    id: \"professor\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Professor\"\n  },\n  {\n    id: \"authorId\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Author id\"\n  }\n];\n\nconst EnhancedTableHead = () => (\n  <TableHead>\n    <TableRow role=\"checkbox\">\n      {examsTableRows.map(row => (\n        <TableCell key={row.id} align=\"center\">\n          {row.label}\n        </TableCell>\n      ))}\n    </TableRow>\n  </TableHead>\n);\n\nconst ExamsTableStyles = makeStyles(theme => ({\n  rootClassName: {\n    width: \"100%\",\n    marginTop: theme.spacing(3)\n  },\n  tableClassName: {\n    minWidth: 400\n  },\n  tableWrapperClassName: {\n    overflowX: \"auto\"\n  },\n  tableRowClassName: {\n    cursor: \"pointer\"\n  }\n}));\n\nconst ExamsTable = props => {\n  const {\n    data,\n    page,\n    count,\n    rowsPerPage,\n    moveToEaxmPage,\n    handlePageChange\n  } = props;\n  const {\n    rootClassName,\n    tableClassName,\n    tableWrapperClassName,\n    tableRowClassName\n  } = ExamsTableStyles();\n  const emptyRows = rowsPerPage - data.length;\n\n  return (\n    <Paper className={rootClassName}>\n      <div className={tableWrapperClassName}>\n        <Table className={tableClassName} aria-labelledby=\"tableTitle\">\n          <EnhancedTableHead rowCount={rowsPerPage} />\n          <TableBody>\n            {data.map(exam => (\n              <TableRow\n                hover\n                key={exam.examId}\n                className={tableRowClassName}\n                onClick={() => moveToEaxmPage(exam.examId)}\n              >\n                <TableCell align=\"center\">{exam.name}</TableCell>\n                <TableCell align=\"center\">{exam.major}</TableCell>\n                <TableCell align=\"center\">{exam.year}</TableCell>\n                <TableCell align=\"center\">{exam.professor}</TableCell>\n                <TableCell align=\"center\">{exam.authorId}</TableCell>\n              </TableRow>\n            ))}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 49 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n      <TablePagination\n        rowsPerPageOptions={[]}\n        component=\"div\"\n        count={count}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handlePageChange}\n        backIconButtonProps={{ \"aria-label\": \"Previous Page\" }}\n        nextIconButtonProps={{ \"aria-label\": \"Next Page\" }}\n      />\n    </Paper>\n  );\n};\n\nExamsTable.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      examId: PropTypes.string.isRequired,\n      authorId: PropTypes.string.isRequired,\n      year: PropTypes.string.isRequired,\n      major: PropTypes.string.isRequired,\n      grade: PropTypes.string.isRequired,\n      semester: PropTypes.string.isRequired,\n      term: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      professor: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  page: PropTypes.number.isRequired,\n  count: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  moveToEaxmPage: PropTypes.func.isRequired,\n  handlePageChange: PropTypes.func.isRequired\n};\n\nexport default ExamsTable;\n","import fetchHelper from \"../../../helpers/fakeFetchHelper\";\n\nconst getExams = async ({\n  rowsPerPage = 10,\n  page = 0,\n  sort = \"asc\",\n  apiCallStart,\n  apiCallSuccess,\n  apiCallFailure\n}) => {\n  const apiResponse = {\n    success: true,\n    exams: [\n      {\n        examId: \"1\",\n        authorId: \"kangji1610\",\n        year: \"2016\",\n        major: \"컴퓨터공학과\",\n        grade: \"1\",\n        semester: \"1학기\",\n        term: \"중간고사\",\n        name: \"컴퓨터공학개론\",\n        professor: \"김재수\",\n        content: \"\"\n      },\n      {\n        examId: \"2\",\n        authorId: \"dongha1810\",\n        year: \"2017\",\n        major: \"컴퓨터공학과\",\n        grade: \"3\",\n        semester: \"2학기\",\n        term: \"기말고사\",\n        name: \"네트워크\",\n        professor: \"이길흥\",\n        content: \"\"\n      },\n      {\n        examId: \"3\",\n        authorId: \"gw1741\",\n        year: \"2019\",\n        major: \"기계공학과\",\n        grade: \"2\",\n        semester: \"1학기\",\n        term: \"기말고사\",\n        name: \"정역학\",\n        professor: \"이지수\",\n        content: \"\"\n      },\n      {\n        examId: \"4\",\n        authorId: \"jjj391\",\n        year: \"2012\",\n        major: \"컴퓨터공학과\",\n        grade: \"2\",\n        semester: \"1학기\",\n        term: \"중간고사\",\n        name: \"객체지향프로그래밍\",\n        professor: \"한지영\",\n        content: \"\"\n      }\n    ],\n    page,\n    count: rowsPerPage,\n    total: 4\n  };\n\n  await apiCallStart();\n\n  await fetchHelper\n    .get(\n      `/exam?limit=${rowsPerPage}&page=${page}&sort=${sort}`,\n      null,\n      apiResponse\n    )\n    .then(response => apiCallSuccess(response))\n    .catch(() => apiCallFailure());\n};\n\nexport default getExams;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ExamsTable from \"../../../components/ExamsTable/ExamsTable\";\nimport LoadingSpinner from \"../../../components/LoadingSpinner/LoadingSpinner\";\nimport ErrorPage from \"../../Pages/ErrorPage/ErrorPage\";\nimport getExams from \"./examsApi\";\n\nconst Exams = props => {\n  const { history } = props;\n  const [exams, setExams] = useState([\n    {\n      examId: \"\",\n      authorId: \"\",\n      year: \"\",\n      major: \"\",\n      grade: \"\",\n      semester: \"\",\n      term: \"\",\n      name: \"\",\n      professor: \"\",\n      content: \"\"\n    }\n  ]);\n  const [page, setPage] = useState(0);\n  const [count, setCount] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(0);\n  const [loadingState, setLoadingState] = useState(false);\n  const [error, setError] = useState(false);\n\n  const setLoadingStateAndErrorWhenApiCallStart = () => {\n    setLoadingState(true);\n    setError(false);\n  };\n\n  const setLoadingStateAndErrorWhenApiCallSuccess = response => {\n    setExams([...response.exams]);\n    setPage(response.page);\n    setCount(response.total);\n    setRowsPerPage(response.count);\n    setLoadingState(false);\n    setError(false);\n  };\n\n  const setLoadingStateAndErrorWhenApiCallFailure = () => {\n    setLoadingState(false);\n    setError(true);\n  };\n\n  const moveToEaxmPage = examId => {\n    history.push(`/exam/exam/${examId}`);\n  };\n\n  const handlePageChange = (event, newPage = 0) => {\n    getExams({\n      page: newPage,\n      apiCallStart: setLoadingStateAndErrorWhenApiCallStart,\n      apiCallSuccess: setLoadingStateAndErrorWhenApiCallSuccess,\n      apiCallFailure: setLoadingStateAndErrorWhenApiCallFailure\n    });\n  };\n\n  useEffect(handlePageChange, []);\n\n  return (\n    <div>\n      <div>Exams</div>\n      <LoadingSpinner loadingState={loadingState}>\n        {error ? (\n          <ErrorPage />\n        ) : (\n          <ExamsTable\n            data={exams}\n            page={page}\n            count={count}\n            rowsPerPage={rowsPerPage}\n            moveToEaxmPage={moveToEaxmPage}\n            handlePageChange={handlePageChange}\n          />\n        )}\n      </LoadingSpinner>\n    </div>\n  );\n};\n\nExams.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nexport default Exams;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst YearValueInputBoxStyles = makeStyles(() => ({\n  inputBoxClassName: {\n    paddingBottom: \"10px\"\n  }\n}));\n\nconst YearValueInputBox = props => {\n  const { value, setValue, valueErrMessage, setValueErrMessage } = props;\n  const { inputBoxClassName } = YearValueInputBoxStyles();\n\n  const yearValueCheck = targetValue => {\n    const yearValueIsEmpty = targetValue === \"\";\n    if (yearValueIsEmpty) return \"Please fill year\";\n\n    const yearRegex = /^[0-9]{4}$/.test(targetValue);\n    if (!yearRegex) return \"Use YYYY format\";\n\n    return \"\";\n  };\n  const handleYearValue = event => {\n    setValue(event.target.value);\n    setValueErrMessage(yearValueCheck(event.target.value));\n  };\n\n  return (\n    <TextField\n      className={`${inputBoxClassName}`}\n      label=\"Year\"\n      type=\"string\"\n      value={value}\n      onChange={handleYearValue}\n      error={!!valueErrMessage}\n      helperText={valueErrMessage || \" \"}\n      fullWidth\n    />\n  );\n};\n\nYearValueInputBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  setValue: PropTypes.func.isRequired,\n  valueErrMessage: PropTypes.string.isRequired,\n  setValueErrMessage: PropTypes.func.isRequired\n};\n\nexport default YearValueInputBox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst GradeValueInputBoxStyles = makeStyles(() => ({\n  inputBoxClassName: {\n    paddingBottom: \"10px\"\n  }\n}));\n\nconst GradeValueInputBox = props => {\n  const { value, setValue, valueErrMessage, setValueErrMessage } = props;\n  const { inputBoxClassName } = GradeValueInputBoxStyles();\n\n  const gradeValueCheck = targetValue => {\n    const gradeValueIsEmpty = targetValue === \"\";\n    if (gradeValueIsEmpty) return \"Please fill grade\";\n\n    const gradeRegex = /^[1-4]*$/.test(targetValue);\n    if (!gradeRegex) return \"Use only numbers 1 or more than 4 or less\";\n\n    return \"\";\n  };\n  const handleNameValue = event => {\n    setValue(event.target.value);\n    setValueErrMessage(gradeValueCheck(event.target.value));\n  };\n\n  return (\n    <TextField\n      className={`${inputBoxClassName}`}\n      label=\"Grade\"\n      type=\"string\"\n      value={value}\n      onChange={handleNameValue}\n      error={!!valueErrMessage}\n      helperText={valueErrMessage || \" \"}\n      fullWidth\n    />\n  );\n};\n\nGradeValueInputBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  setValue: PropTypes.func.isRequired,\n  valueErrMessage: PropTypes.string.isRequired,\n  setValueErrMessage: PropTypes.func.isRequired\n};\n\nexport default GradeValueInputBox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst SemesterValueInputBoxStyles = makeStyles(() => ({\n  inputBoxClassName: {\n    paddingBottom: \"10px\"\n  }\n}));\nconst SemesterValueInputBox = props => {\n  const { value, setValue, valueErrMessage, setValueErrMessage } = props;\n  const { inputBoxClassName } = SemesterValueInputBoxStyles();\n\n  const semesterValueCheck = targetValue => {\n    const semesterValueIsEmpty = targetValue === \"\";\n    if (semesterValueIsEmpty) return \"Please fill semester\";\n\n    const semesterRegex = /^[1-2가-힣+]*(학기)$/.test(targetValue);\n    if (!semesterRegex) return \"Input XX학기 format\";\n\n    return \"\";\n  };\n\n  const handleSemesterValue = event => {\n    setValue(event.target.value);\n    setValueErrMessage(semesterValueCheck(event.target.value));\n  };\n\n  return (\n    <TextField\n      className={`${inputBoxClassName}`}\n      label=\"Semester\"\n      type=\"string\"\n      value={value}\n      onChange={handleSemesterValue}\n      error={!!valueErrMessage}\n      helperText={valueErrMessage || \" \"}\n      fullWidth\n    />\n  );\n};\n\nSemesterValueInputBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  setValue: PropTypes.func.isRequired,\n  valueErrMessage: PropTypes.string.isRequired,\n  setValueErrMessage: PropTypes.func.isRequired\n};\n\nexport default SemesterValueInputBox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst BirthdayValueInputBoxStyles = makeStyles(() => ({\n  inputBoxClassName: {\n    paddingBottom: \"10px\"\n  }\n}));\n\nconst TermValueInputBox = props => {\n  const { value, setValue, valueErrMessage, setValueErrMessage } = props;\n  const { inputBoxClassName } = BirthdayValueInputBoxStyles();\n\n  const termValueCheck = targetValue => {\n    const termValueIsEmpty = targetValue === \"\";\n    if (termValueIsEmpty) return \"Please fill term\";\n\n    const termRegex = /^[가-힣+]*(고사)$/.test(targetValue);\n    if (!termRegex) return \"Input XX고사 format\";\n\n    return \"\";\n  };\n\n  const handleTermValue = event => {\n    setValue(event.target.value);\n    setValueErrMessage(termValueCheck(event.target.value));\n  };\n\n  return (\n    <TextField\n      className={`${inputBoxClassName}`}\n      label=\"Term\"\n      type=\"string\"\n      value={value}\n      onChange={handleTermValue}\n      error={!!valueErrMessage}\n      helperText={valueErrMessage || \" \"}\n      fullWidth\n    />\n  );\n};\n\nTermValueInputBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  setValue: PropTypes.func.isRequired,\n  valueErrMessage: PropTypes.string.isRequired,\n  setValueErrMessage: PropTypes.func.isRequired\n};\n\nexport default TermValueInputBox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nimport YearValueInputBox from \"../InputBoxes/YearValueInputBox/YearValueInputBox\";\nimport MajorValueInputBox from \"../InputBoxes/MajorValueInputBox/MajorValueInputBox\";\nimport GradeValueInputBox from \"../InputBoxes/GradeValueInputBox/GradeValueInputBox\";\nimport SemesterValueInputBox from \"../InputBoxes/SemesterValueInputBox/SemesterValueInputBox\";\nimport TermValueInputBox from \"../InputBoxes/TermValueInputBox/TermValueInputBox\";\nimport NameValueInputBox from \"../InputBoxes/NameValueInputBox/NameValueInputBox\";\nimport ContentValueInputBox from \"../InputBoxes/ContentValueInputBox/ContentValueInputBox\";\n\nconst projectEditFormStyles = makeStyles(() => ({\n  examEditFormWrapperClassName: {\n    marginBottom: \"20px\"\n  },\n  buttonWrapperClassName: {\n    textAlign: \"right\"\n  }\n}));\n\nconst ProjectEditForm = props => {\n  const { examFormData, handleSubmit } = props;\n  const {\n    examEditFormWrapperClassName,\n    buttonWrapperClassName\n  } = projectEditFormStyles();\n\n  const validationCheckAndHandleSubmit = event => {\n    // Prevent browers refresh.\n    event.preventDefault();\n    handleSubmit();\n  };\n\n  return (\n    <div className={`project-edit-form ${examEditFormWrapperClassName}`}>\n      <form\n        className=\"project-edit-form__form\"\n        onSubmit={validationCheckAndHandleSubmit}\n      >\n        <YearValueInputBox\n          value={examFormData.year.value}\n          setValue={examFormData.year.setValue}\n          valueErrMessage={examFormData.year.valueErrMessage}\n          setValueErrMessage={examFormData.year.setValueErrMessage}\n        />\n        <MajorValueInputBox\n          value={examFormData.major.value}\n          setValue={examFormData.major.setValue}\n          valueErrMessage={examFormData.major.valueErrMessage}\n          setValueErrMessage={examFormData.major.setValueErrMessage}\n        />\n        <GradeValueInputBox\n          value={examFormData.grade.value}\n          setValue={examFormData.grade.setValue}\n          valueErrMessage={examFormData.grade.valueErrMessage}\n          setValueErrMessage={examFormData.grade.setValueErrMessage}\n        />\n        <SemesterValueInputBox\n          value={examFormData.semester.value}\n          setValue={examFormData.semester.setValue}\n          valueErrMessage={examFormData.semester.valueErrMessage}\n          setValueErrMessage={examFormData.semester.setValueErrMessage}\n        />\n        <TermValueInputBox\n          value={examFormData.term.value}\n          setValue={examFormData.term.setValue}\n          valueErrMessage={examFormData.term.valueErrMessage}\n          setValueErrMessage={examFormData.term.setValueErrMessage}\n        />\n        <NameValueInputBox\n          value={examFormData.name.value}\n          setValue={examFormData.name.setValue}\n          valueErrMessage={examFormData.name.valueErrMessage}\n          setValueErrMessage={examFormData.name.setValueErrMessage}\n          label=\"Lecture name\"\n        />\n        <NameValueInputBox\n          value={examFormData.professor.value}\n          setValue={examFormData.professor.setValue}\n          valueErrMessage={examFormData.professor.valueErrMessage}\n          setValueErrMessage={examFormData.professor.setValueErrMessage}\n          label=\"Professor name\"\n        />\n        <ContentValueInputBox\n          value={examFormData.content.value}\n          setValue={examFormData.content.setValue}\n          valueErrMessage={examFormData.content.valueErrMessage}\n          setValueErrMessage={examFormData.content.setValueErrMessage}\n        />\n        <div className={buttonWrapperClassName}>\n          <Button\n            className=\"submit-button\"\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nProjectEditForm.propTypes = {\n  examFormData: PropTypes.shape({\n    year: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired\n    }),\n    major: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired\n    }),\n    grade: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired\n    }),\n    semester: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired\n    }),\n    term: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired\n    }),\n    name: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired\n    }),\n    professor: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired\n    }),\n    content: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired\n    })\n  }).isRequired,\n  handleSubmit: PropTypes.func.isRequired\n};\n\nexport default ProjectEditForm;\n","import fetchHelper from \"../../../helpers/fakeFetchHelper\";\n\nexport const getExam = async ({\n  examId,\n  apiCallStart,\n  apiCallSuccess,\n  apiCallFailure\n}) => {\n  const apiResponse = {\n    success: true,\n    exam: {\n      examId,\n      authorId: \"userAbc\",\n      year: \"2012\",\n      major: \"컴퓨터공학과\",\n      grade: \"2\",\n      semester: \"1학기\",\n      term: \"중간고사\",\n      name: \"객체지향프로그래밍\",\n      professor: \"한지영\",\n      content:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Nunc mattis enim ut tellus elementum sagittis vitae et. Id consectetur purus ut faucibus pulvinar elementum integer enim neque. Lectus magna fringilla urna porttitor rhoncus dolor purus non enim. Nulla posuere sollicitudin aliquam ultrices sagittis orci a scelerisque. Neque convallis a cras semper auctor neque vitae tempus. Pulvinar pellentesque habitant morbi tristique. Molestie a iaculis at erat. Justo eget magna fermentum iaculis eu non diam phasellus. Egestas erat imperdiet sed euismod nisi porta lorem. Enim sit amet venenatis urna cursus. Integer malesuada nunc vel risus commodo. Ipsum faucibus vitae aliquet nec ullamcorper sit amet. Vestibulum morbi blandit cursus risus at ultrices mi tempus imperdiet. Blandit libero volutpat sed cras ornare arcu. Semper eget duis at tellus at urna condimentum mattis pellentesque. Risus nec feugiat in fermentum posuere. Lectus nulla at volutpat diam. Odio ut sem nulla pharetra diam sit amet. Feugiat scelerisque varius morbi enim nunc.\"\n    }\n  };\n\n  await apiCallStart();\n\n  await fetchHelper\n    .get(`/exam/${examId}`, null, apiResponse)\n    .then(response => apiCallSuccess(response))\n    .catch(() => apiCallFailure());\n};\n\nexport const putExam = async ({\n  examId,\n  examInformation,\n  apiCallStart,\n  apiCallSuccess,\n  apiCallFailure\n}) => {\n  const apiResponse = { success: true };\n\n  await apiCallStart();\n\n  await fetchHelper\n    .put(`/exam/${examId}`, examInformation, apiResponse)\n    .then(() => apiCallSuccess())\n    .catch(() => apiCallFailure());\n};\n\nexport const postExam = async ({\n  examInformation,\n  apiCallStart,\n  apiCallSuccess,\n  apiCallFailure\n}) => {\n  const apiResponse = { success: true };\n\n  await apiCallStart();\n\n  await fetchHelper\n    .post(`/exam`, examInformation, apiResponse)\n    .then(() => apiCallSuccess())\n    .catch(() => apiCallFailure());\n};\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ExamEditForm from \"../../../components/ExamEditForm/ExamEditForm\";\nimport ErrorPage from \"../../Pages/ErrorPage/ErrorPage\";\nimport LoadingSpinner from \"../../../components/LoadingSpinner/LoadingSpinner\";\nimport * as examEditApi from \"./ExamEditApi\";\n\nconst ExamEdit = props => {\n  const { history, match } = props;\n  const { examId } = match.params;\n\n  const [year, setYear] = useState(\"\");\n  const [yearErrMessage, setYearErrMessage] = useState(\"\");\n\n  const [major, setMajor] = useState(\"\");\n  const [majorErrMessage, setMajorErrMessage] = useState(\"\");\n\n  const [grade, setGrade] = useState(\"\");\n  const [gradeErrMessage, setGradeErrMessage] = useState(\"\");\n\n  const [semester, setSemester] = useState(\"\");\n  const [semesterErrErrMessage, setSemesterErrMessage] = useState(\"\");\n\n  const [term, setTerm] = useState(\"\");\n  const [termErrMessage, setTermErrMessage] = useState(\"\");\n\n  const [name, setName] = useState(\"\");\n  const [nameErrMessage, setNameErrMessage] = useState(\"\");\n\n  const [professor, setProfessor] = useState(\"\");\n  const [professorErrMessage, setProfessorErrMessage] = useState(\"\");\n\n  const [content, setContent] = useState(\"\");\n  const [contentErrMessage, setContentErrMessage] = useState(\"\");\n\n  const examFormData = {\n    year: {\n      value: year,\n      setValue: setYear,\n      valueErrMessage: yearErrMessage,\n      setValueErrMessage: setYearErrMessage\n    },\n    major: {\n      value: major,\n      setValue: setMajor,\n      valueErrMessage: majorErrMessage,\n      setValueErrMessage: setMajorErrMessage\n    },\n    grade: {\n      value: grade,\n      setValue: setGrade,\n      valueErrMessage: gradeErrMessage,\n      setValueErrMessage: setGradeErrMessage\n    },\n    semester: {\n      value: semester,\n      setValue: setSemester,\n      valueErrMessage: semesterErrErrMessage,\n      setValueErrMessage: setSemesterErrMessage\n    },\n    term: {\n      value: term,\n      setValue: setTerm,\n      valueErrMessage: termErrMessage,\n      setValueErrMessage: setTermErrMessage\n    },\n    name: {\n      value: name,\n      setValue: setName,\n      valueErrMessage: nameErrMessage,\n      setValueErrMessage: setNameErrMessage\n    },\n    professor: {\n      value: professor,\n      setValue: setProfessor,\n      valueErrMessage: professorErrMessage,\n      setValueErrMessage: setProfessorErrMessage\n    },\n    content: {\n      value: content,\n      setValue: setContent,\n      valueErrMessage: contentErrMessage,\n      setValueErrMessage: setContentErrMessage\n    }\n  };\n\n  const [loadingState, setLoadingState] = useState(false);\n  const [error, setError] = useState(false);\n\n  const setStateApiCallStart = () => {\n    setLoadingState(true);\n    setError(false);\n  };\n\n  const setStateGetExamInformationSuccess = examInformation => {\n    setYear(examInformation.exam.year);\n    setMajor(examInformation.exam.major);\n    setGrade(examInformation.exam.grade);\n    setSemester(examInformation.exam.semester);\n    setTerm(examInformation.exam.term);\n    setName(examInformation.exam.name);\n    setProfessor(examInformation.exam.professor);\n    setContent(examInformation.exam.content);\n    setLoadingState(false);\n    setError(false);\n  };\n  const setStateGetExamInformationFailure = () => {\n    setLoadingState(false);\n    setError(true);\n  };\n\n  const setStateHandleSubmitSuccess = () => {\n    setLoadingState(false);\n    setError(false);\n\n    if (examId) {\n      history.push(`/exam/exam/${examId}`);\n    } else {\n      history.push(\"/exam/exams\");\n    }\n  };\n\n  const setStateHandleSubmitFailure = () => {\n    setLoadingState(false);\n    setError(true);\n  };\n\n  const getExamInformation = () => {\n    if (examId) {\n      examEditApi.getExam({\n        examId,\n        apiCallStart: setStateApiCallStart,\n        apiCallSuccess: setStateGetExamInformationSuccess,\n        apiCallFailure: setStateGetExamInformationFailure\n      });\n    }\n  };\n\n  const handleSubmit = () => {\n    let err = false;\n\n    Object.keys(examFormData).forEach(key => {\n      if (examFormData[key].value === \"\" || examFormData[key].valueErrMessage)\n        err = true;\n    });\n\n    if (!err) {\n      const examInformation = {\n        year,\n        major,\n        grade,\n        semester,\n        term,\n        name,\n        professor,\n        content\n      };\n\n      if (examId) {\n        examEditApi.putExam({\n          examId,\n          examInformation,\n          apiCallStart: setStateApiCallStart,\n          apiCallSuccess: setStateHandleSubmitSuccess,\n          apiCallFailure: setStateHandleSubmitFailure\n        });\n      } else {\n        examEditApi.postExam({\n          examInformation,\n          apiCallStart: setStateApiCallStart,\n          apiCallSuccess: setStateHandleSubmitSuccess,\n          apiCallFailure: setStateHandleSubmitFailure\n        });\n      }\n    }\n  };\n\n  // Component did mount.\n  useEffect(getExamInformation, []);\n\n  return (\n    <LoadingSpinner loadingState={loadingState}>\n      {error ? (\n        <ErrorPage />\n      ) : (\n        <ExamEditForm examFormData={examFormData} handleSubmit={handleSubmit} />\n      )}\n    </LoadingSpinner>\n  );\n};\n\nExamEdit.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      examId: PropTypes.string\n    })\n  })\n};\n\nExamEdit.defaultProps = {\n  match: { params: { examId: \"\" } }\n};\n\nexport default ExamEdit;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport {\n  AccessibilityNew,\n  CalendarToday,\n  Computer,\n  School,\n  Today,\n  TextFields,\n  MenuBook,\n  EmojiPeople,\n  LibraryBooks\n} from \"@material-ui/icons\";\n\nconst createProjectInformationRow = (icon, dataName, data) => {\n  return { icon, dataName, data };\n};\n\nconst createTableRows = examInformation => [\n  createProjectInformationRow(\n    AccessibilityNew,\n    \"Author id\",\n    examInformation.authorId\n  ),\n  createProjectInformationRow(CalendarToday, \"Year\", examInformation.year),\n  createProjectInformationRow(Computer, \"Major\", examInformation.major),\n  createProjectInformationRow(School, \"Grade\", examInformation.grade),\n  createProjectInformationRow(Today, \"Semester\", examInformation.semester),\n  createProjectInformationRow(TextFields, \"Term\", examInformation.term),\n  createProjectInformationRow(MenuBook, \"Lecture name\", examInformation.name),\n  createProjectInformationRow(\n    EmojiPeople,\n    \"Professor\",\n    examInformation.professor\n  ),\n  createProjectInformationRow(LibraryBooks, \"Content\", examInformation.content)\n];\n\nconst projectInformationStyles = makeStyles(theme => ({\n  rootClassName: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    marginBottom: \"10px\"\n  },\n  buttonWrapperClassName: {\n    textAlign: \"right\"\n  },\n  deleteButtonClassName: {\n    marginRight: \"10px\"\n  }\n}));\n\nconst ExamInformationList = props => {\n  const {\n    rootClassName,\n    buttonWrapperClassName,\n    deleteButtonClassName\n  } = projectInformationStyles();\n  const {\n    examInformation,\n    selfIdentification,\n    deleteExam,\n    examInformationEditPageUrl\n  } = props;\n  const tableRow = createTableRows(examInformation);\n\n  return (\n    <>\n      <List className={rootClassName}>\n        {tableRow.map(row => (\n          <Fragment key={row.dataName}>\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar>\n                  <row.icon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={row.dataName} secondary={row.data} />\n            </ListItem>\n            <Divider variant=\"inset\" component=\"li\" />\n          </Fragment>\n        ))}\n      </List>\n      {selfIdentification ? (\n        <div className={`button-wrapper ${buttonWrapperClassName}`}>\n          <Button\n            className={`button-wrapper__delete-button ${deleteButtonClassName}`}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => deleteExam()}\n          >\n            Delete\n          </Button>\n          <Button\n            className=\"button-wrapper__edit-button\"\n            variant=\"contained\"\n            color=\"primary\"\n            component={Link}\n            to={examInformationEditPageUrl}\n          >\n            Edit\n          </Button>\n        </div>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nExamInformationList.propTypes = {\n  examInformation: PropTypes.shape({\n    examId: PropTypes.string.isRequired,\n    authorId: PropTypes.string.isRequired,\n    year: PropTypes.string.isRequired,\n    major: PropTypes.string.isRequired,\n    grade: PropTypes.string.isRequired,\n    semester: PropTypes.string.isRequired,\n    term: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    professor: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired\n  }).isRequired,\n  selfIdentification: PropTypes.bool.isRequired,\n  deleteExam: PropTypes.func.isRequired,\n  examInformationEditPageUrl: PropTypes.string.isRequired\n};\n\nexport default ExamInformationList;\n","import fetchHelper from \"../../../helpers/fakeFetchHelper\";\n\nexport const getExam = async ({\n  examId,\n  apiCallStart,\n  apiCallSuccess,\n  apiCallFailure\n}) => {\n  const apiResponse = {\n    success: true,\n    exam: {\n      examId,\n      authorId: \"userAbc\",\n      year: \"2012\",\n      major: \"컴퓨터공학과\",\n      grade: \"2\",\n      semester: \"1학기\",\n      term: \"중간고사\",\n      name: \"객체지향프로그래밍\",\n      professor: \"한지영\",\n      content:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Nunc mattis enim ut tellus elementum sagittis vitae et. Id consectetur purus ut faucibus pulvinar elementum integer enim neque. Lectus magna fringilla urna porttitor rhoncus dolor purus non enim. Nulla posuere sollicitudin aliquam ultrices sagittis orci a scelerisque. Neque convallis a cras semper auctor neque vitae tempus. Pulvinar pellentesque habitant morbi tristique. Molestie a iaculis at erat. Justo eget magna fermentum iaculis eu non diam phasellus. Egestas erat imperdiet sed euismod nisi porta lorem. Enim sit amet venenatis urna cursus. Integer malesuada nunc vel risus commodo. Ipsum faucibus vitae aliquet nec ullamcorper sit amet. Vestibulum morbi blandit cursus risus at ultrices mi tempus imperdiet. Blandit libero volutpat sed cras ornare arcu. Semper eget duis at tellus at urna condimentum mattis pellentesque. Risus nec feugiat in fermentum posuere. Lectus nulla at volutpat diam. Odio ut sem nulla pharetra diam sit amet. Feugiat scelerisque varius morbi enim nunc.\"\n    }\n  };\n\n  await apiCallStart();\n\n  await fetchHelper\n    .get(`/exam/${examId}`, null, apiResponse)\n    .then(response => apiCallSuccess(response))\n    .catch(() => apiCallFailure());\n};\n\nexport const deleteExam = async ({\n  examId,\n  apiCallStart,\n  apiCallSuccess,\n  apiCallFailure\n}) => {\n  const apiResponse = { success: true };\n\n  await apiCallStart();\n\n  await fetchHelper\n    .delete(`/exam/${examId}`, null, apiResponse)\n    .then(() => apiCallSuccess())\n    .catch(() => apiCallFailure());\n};\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport ExamInformationList from \"../../../components/ExamInformationList/ExamInformationList\";\nimport LoadingSpinner from \"../../../components/LoadingSpinner/LoadingSpinner\";\nimport ErrorPage from \"../../Pages/ErrorPage/ErrorPage\";\nimport * as ExamApi from \"./ExamApi\";\n\nconst Exam = props => {\n  const { myId, match, history } = props;\n  const { examId } = match.params;\n  const [examInformation, setExamInformation] = useState({\n    examId: \"\",\n    authorId: \"\",\n    year: \"\",\n    major: \"\",\n    grade: \"\",\n    semester: \"\",\n    term: \"\",\n    name: \"\",\n    professor: \"\",\n    content: \"\"\n  });\n  const [selfIdentification, setSelfIdentification] = useState(false);\n  const [loadingState, setLoadingState] = useState(false);\n  const [error, setError] = useState(false);\n\n  const setLoadingStateAndErrorWhenApiCallStart = () => {\n    setLoadingState(true);\n    setError(false);\n  };\n\n  const setLoadingStateAndErrorWhenApiCallSuccess = response => {\n    setExamInformation(response.exam);\n    // Check self identification for edit and delete button.\n    if (response.exam.authorId === myId) setSelfIdentification(true);\n    setLoadingState(false);\n    setError(false);\n  };\n\n  const setLoadingStateAndErrorWhenApiCallFailure = () => {\n    setLoadingState(false);\n    setError(true);\n  };\n\n  const deleteExam = () => {\n    ExamApi.deleteExam({\n      examId,\n      apiCallStart: setLoadingStateAndErrorWhenApiCallStart,\n      apiCallSuccess: () => history.replace(\"/exam/exams\"),\n      apiCallFailure: setLoadingStateAndErrorWhenApiCallFailure\n    });\n  };\n\n  const getExam = () => {\n    ExamApi.getExam({\n      examId,\n      apiCallStart: setLoadingStateAndErrorWhenApiCallStart,\n      apiCallSuccess: setLoadingStateAndErrorWhenApiCallSuccess,\n      apiCallFailure: setLoadingStateAndErrorWhenApiCallFailure\n    });\n  };\n\n  useEffect(getExam, []);\n\n  return (\n    <div>\n      <div>Exam</div>\n      <LoadingSpinner loadingState={loadingState}>\n        {error ? (\n          <ErrorPage />\n        ) : (\n          <ExamInformationList\n            examInformation={examInformation}\n            selfIdentification={selfIdentification}\n            deleteExam={deleteExam}\n            examInformationEditPageUrl={`/exam/exam/${examId}/edit`}\n          />\n        )}\n      </LoadingSpinner>\n    </div>\n  );\n};\n\nExam.propTypes = {\n  myId: PropTypes.string.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      examId: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired,\n  history: PropTypes.shape({\n    replace: PropTypes.func.isRequired\n  }).isRequired\n};\n\nconst mapStateToProps = state => {\n  const { auth } = state;\n  return { myId: auth.userId };\n};\n\nexport default connect(mapStateToProps)(Exam);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Done from \"@material-ui/icons/Done\";\nimport Close from \"@material-ui/icons/Close\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst rows = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Student name\"\n  },\n  {\n    id: \"studenNumber\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Student number\"\n  },\n  {\n    id: \"id\",\n    numeric: true,\n    disablePadding: false,\n    label: \"ID\"\n  }\n];\n\nconst EnhancedTableHead = () => (\n  <TableHead>\n    <TableRow role=\"checkbox\">\n      {rows.map(row => (\n        <TableCell key={row.id} align=\"center\">\n          {row.label}\n        </TableCell>\n      ))}\n      <TableCell align=\"center\">Approve/Reject</TableCell>\n    </TableRow>\n  </TableHead>\n);\n\nconst JoinRequestTableStyles = makeStyles(theme => ({\n  rootClassName: {\n    width: \"100%\",\n    marginTop: theme.spacing(3)\n  },\n  tableClassName: {\n    minWidth: 400\n  },\n  tableWrapperClassName: {\n    overflowX: \"auto\"\n  },\n  buttonPaddingClassName: {\n    marginRight: 10\n  },\n  tableRowClassName: {\n    cursor: \"pointer\"\n  }\n}));\n\nconst JoinRequestTable = props => {\n  const {\n    data,\n    page,\n    count,\n    rowsPerPage,\n    handlePageChange,\n    moveToUserPage,\n    joinRequestReview\n  } = props;\n  const {\n    rootClassName,\n    tableClassName,\n    tableWrapperClassName,\n    buttonPaddingClassName,\n    tableRowClassName\n  } = JoinRequestTableStyles();\n  const emptyRows = rowsPerPage - data.length;\n\n  return (\n    <Paper className={rootClassName}>\n      <div className={tableWrapperClassName}>\n        <Table className={tableClassName} aria-labelledby=\"tableTitle\">\n          <EnhancedTableHead rowCount={rowsPerPage} />\n          <TableBody>\n            {data.map(student => (\n              <TableRow\n                hover\n                key={student.userId}\n                className={tableRowClassName}\n                onClick={event => {\n                  if (event.target.tagName === \"TD\")\n                    moveToUserPage(student.userId);\n                }}\n              >\n                <TableCell align=\"center\">{student.name}</TableCell>\n                <TableCell align=\"center\">{student.stdNumber}</TableCell>\n                <TableCell align=\"center\">{student.userId}</TableCell>\n                <TableCell align=\"center\">\n                  <Fab\n                    size=\"small\"\n                    color=\"primary\"\n                    aria-label=\"Approve\"\n                    className={buttonPaddingClassName}\n                    onClick={() =>\n                      joinRequestReview({\n                        userId: student.userId,\n                        currentPage: page,\n                        joinRequestType: \"approve\"\n                      })\n                    }\n                  >\n                    <Done />\n                  </Fab>\n                  <Fab\n                    size=\"small\"\n                    color=\"secondary\"\n                    aria-label=\"Reject\"\n                    onClick={() =>\n                      joinRequestReview({\n                        userId: student.userId,\n                        currentPage: page,\n                        joinRequestType: \"reject\"\n                      })\n                    }\n                  >\n                    <Close />\n                  </Fab>\n                </TableCell>\n              </TableRow>\n            ))}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 49 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n      <TablePagination\n        rowsPerPageOptions={[]}\n        component=\"div\"\n        page={page}\n        count={count}\n        rowsPerPage={rowsPerPage}\n        onChangePage={handlePageChange}\n        backIconButtonProps={{ \"aria-label\": \"Previous Page\" }}\n        nextIconButtonProps={{ \"aria-label\": \"Next Page\" }}\n      />\n    </Paper>\n  );\n};\n\nJoinRequestTable.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      stdNumber: PropTypes.string,\n      userId: PropTypes.string\n    })\n  ),\n  page: PropTypes.number.isRequired,\n  count: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  handlePageChange: PropTypes.func.isRequired,\n  moveToUserPage: PropTypes.func.isRequired,\n  joinRequestReview: PropTypes.func.isRequired\n};\n\nJoinRequestTable.defaultProps = {\n  data: [{ name: \"\", stdNumber: \"\", userId: \"\" }]\n};\n\nexport default JoinRequestTable;\n","import fetchHelper from \"../../../helpers/fakeFetchHelper\";\n\nexport const getJoinRequests = async ({\n  rowsPerPage = 10,\n  page = 0,\n  sort = \"asc\",\n  apiCallStart,\n  apiCallSuccess,\n  apiCallFailure\n}) => {\n  const apiResponse = {\n    success: true,\n    users: [\n      { name: \"강민준\", stdNumber: \"16101341\", userId: \"kangji1610\" },\n      { name: \"이서준\", stdNumber: \"15101261\", userId: \"sy1510\" },\n      { name: \"정예준\", stdNumber: \"18101826\", userId: \"dongha1810\" },\n      { name: \"김도윤\", stdNumber: \"18101926\", userId: \"doh18\" },\n      { name: \"이시우\", stdNumber: \"15101729\", userId: \"gw1741\" },\n      { name: \"김주원\", stdNumber: \"16101274\", userId: \"kimkim715\" },\n      { name: \"전하준\", stdNumber: \"16101037\", userId: \"jjj391\" },\n      { name: \"윤지호\", stdNumber: \"12101348\", userId: \"yjs1013\" },\n      { name: \"임현우\", stdNumber: \"14101242\", userId: \"ijh34879\" }\n    ],\n    page,\n    count: rowsPerPage,\n    total: 9\n  };\n\n  await apiCallStart();\n\n  await fetchHelper\n    .get(\n      `/admin/user?limit=${rowsPerPage}&page=${page}&sort=${sort}`,\n      null,\n      apiResponse\n    )\n    .then(response => apiCallSuccess(response))\n    .catch(() => apiCallFailure());\n};\n\nexport const postJoinRequestReview = async ({\n  userId,\n  joinRequestType,\n  currentPage = 1,\n  apiCallStart,\n  apiCallSuccess,\n  apiCallFailure\n}) => {\n  const apiResponse = { success: true };\n\n  await apiCallStart();\n\n  await fetchHelper\n    .put(`/admin/user/${joinRequestType}/${userId}/`, { userId }, apiResponse)\n    .then(() => apiCallSuccess(null, currentPage))\n    .catch(() => apiCallFailure());\n};\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport JoinRequestsTable from \"../../../components/JoinRequestsTable/JoinRequestsTable\";\nimport LoadingSpinner from \"../../../components/LoadingSpinner/LoadingSpinner\";\nimport ErrorPage from \"../../Pages/ErrorPage/ErrorPage\";\nimport * as joinRequestsApi from \"./joinRequestsApi\";\n\nconst JoinRequests = props => {\n  const { history } = props;\n  const [joinRequests, setJoinRequests] = useState([\n    {\n      name: \"\",\n      studentNumber: \"\",\n      id: \"\",\n      userId: \"\"\n    }\n  ]);\n  const [page, setPage] = useState(0);\n  const [count, setCount] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(0);\n  const [loadingState, setLoadingState] = useState(false);\n  const [error, setError] = useState(false);\n\n  const setLoadingStateAndErrorWhenApiCallStart = () => {\n    setLoadingState(true);\n    setError(false);\n  };\n\n  const setLoadingStateAndErrorWhenApiCallSuccess = response => {\n    setJoinRequests([...response.users]);\n    setPage(response.page);\n    setCount(response.total);\n    setRowsPerPage(response.count);\n    setLoadingState(false);\n    setError(false);\n  };\n\n  const setLoadingStateAndErrorWhenApiCallFailure = () => {\n    setLoadingState(false);\n    setError(true);\n  };\n\n  const handlePageChange = (event, newPage = 0) => {\n    joinRequestsApi.getJoinRequests({\n      page: newPage,\n      apiCallStart: setLoadingStateAndErrorWhenApiCallStart,\n      apiCallSuccess: setLoadingStateAndErrorWhenApiCallSuccess,\n      apiCallFailure: setLoadingStateAndErrorWhenApiCallFailure\n    });\n  };\n\n  const joinRequestReview = ({ userId, currentPage, joinRequestType }) => {\n    joinRequestsApi.postJoinRequestReview({\n      userId,\n      joinRequestType,\n      currentPage,\n      apiCallStart: setLoadingStateAndErrorWhenApiCallStart,\n      apiCallSuccess: handlePageChange,\n      apiCallFailure: setLoadingStateAndErrorWhenApiCallFailure\n    });\n  };\n\n  const moveToUserPage = userId => {\n    history.push(`/user/${userId}`);\n  };\n\n  // Component did mount\n  useEffect(handlePageChange, []);\n\n  return (\n    <div>\n      <div>Join request</div>\n      <LoadingSpinner loadingState={loadingState}>\n        {error ? (\n          <ErrorPage />\n        ) : (\n          <JoinRequestsTable\n            data={joinRequests}\n            page={page}\n            count={count}\n            rowsPerPage={rowsPerPage}\n            handlePageChange={handlePageChange}\n            moveToUserPage={moveToUserPage}\n            joinRequestReview={joinRequestReview}\n          />\n        )}\n      </LoadingSpinner>\n    </div>\n  );\n};\n\nJoinRequests.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nexport default JoinRequests;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst rows = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"User Name\"\n  },\n  {\n    id: \"nickname\",\n    numeric: true,\n    disablePadding: false,\n    label: \"User Nickname\"\n  },\n  {\n    id: \"email\",\n    numeric: true,\n    disablePadding: false,\n    label: \"User Email\"\n  },\n  {\n    id: \"stdNumber\",\n    numeric: true,\n    disablePadding: false,\n    label: \"User Student Number\"\n  },\n  {\n    id: \"birthday\",\n    numeric: true,\n    disablePadding: false,\n    label: \"User Birthday\"\n  }\n];\n\nconst EnhancedTableHead = () => (\n  <TableHead>\n    <TableRow role=\"checkbox\">\n      {rows.map(row => (\n        <TableCell key={row.id} align=\"center\">\n          {row.label}\n        </TableCell>\n      ))}\n    </TableRow>\n  </TableHead>\n);\n\nconst UsersTableStyles = makeStyles(theme => ({\n  rootClassName: {\n    width: \"100%\",\n    marginTop: theme.spacing(3)\n  },\n  tableClassName: {\n    minWidth: 400\n  },\n  tableWrapperClassName: {\n    overflowX: \"auto\"\n  },\n  tableRowClassName: {\n    cursor: \"pointer\"\n  }\n}));\n\nconst UsersTable = props => {\n  const {\n    data,\n    page,\n    count,\n    rowsPerPage,\n    handlePageChange,\n    moveToUserPage\n  } = props;\n  const {\n    rootClassName,\n    tableClassName,\n    tableWrapperClassName,\n    tableRowClassName\n  } = UsersTableStyles();\n  const emptyRows = rowsPerPage - data.length;\n\n  return (\n    <Paper className={rootClassName}>\n      <div className={tableWrapperClassName}>\n        <Table className={tableClassName} aria-labelledby=\"tableTitle\">\n          <EnhancedTableHead rowCount={rowsPerPage} />\n          <TableBody>\n            {data.map(user => (\n              <TableRow\n                hover\n                key={user.stdNumber}\n                className={tableRowClassName}\n                onClick={() => moveToUserPage(user.id)}\n              >\n                <TableCell align=\"center\">{user.name}</TableCell>\n                <TableCell align=\"center\">{user.nickname}</TableCell>\n                <TableCell align=\"center\">{user.email}</TableCell>\n                <TableCell align=\"center\">{user.stdNumber}</TableCell>\n                <TableCell align=\"center\">{user.birthday}</TableCell>\n              </TableRow>\n            ))}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 49 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n      <TablePagination\n        rowsPerPageOptions={[]}\n        component=\"div\"\n        count={count}\n        page={page}\n        rowsPerPage={rowsPerPage}\n        onChangePage={handlePageChange}\n        backIconButtonProps={{ \"aria-label\": \"Previous Page\" }}\n        nextIconButtonProps={{ \"aria-label\": \"Next Page\" }}\n      />\n    </Paper>\n  );\n};\n\nUsersTable.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      nickname: PropTypes.string.isRequired,\n      stdNumber: PropTypes.string.isRequired,\n      phoneNum: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired,\n      birthday: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  page: PropTypes.number.isRequired,\n  count: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  moveToUserPage: PropTypes.func.isRequired,\n  handlePageChange: PropTypes.func.isRequired\n};\n\nexport default UsersTable;\n","import fetchHelper from \"../../../helpers/fakeFetchHelper\";\n\nconst getUsers = async ({\n  rowsPerPage = 10,\n  page = 0,\n  sort = \"asc\",\n  apiCallStart,\n  apiCallSuccess,\n  apiCallFailure\n}) => {\n  const apiResponse = {\n    success: true,\n    users: [\n      {\n        id: \"kangji1610\",\n        name: \"강민준\",\n        nickname: \"Alianna\",\n        stdNumber: \"16101341\",\n        phoneNum: \"01020581720\",\n        email: \"kangji1610@naver.com\",\n        birthday: \"971226\"\n      },\n      {\n        id: \"sy1510\",\n        name: \"이서준\",\n        nickname: \"Hollaun\",\n        stdNumber: \"15101261\",\n        phoneNum: \"01026318999\",\n        email: \"sy1510@gmail.com\",\n        birthday: \"080706\"\n      },\n      {\n        id: \"dongha1810\",\n        name: \"정예준\",\n        nickname: \"Maherri\",\n        stdNumber: \"18101826\",\n        phoneNum: \"01083979203\",\n        email: \"dongha1810@daum.com\",\n        birthday: \"940528\"\n      },\n      {\n        id: \"doh18\",\n        name: \"김도윤\",\n        nickname: \"Pherly\",\n        stdNumber: \"18101926\",\n        phoneNum: \"01093842917\",\n        email: \"doh18@naver.com\",\n        birthday: \"900106\"\n      },\n      {\n        id: \"gw1741\",\n        name: \"이시우\",\n        nickname: \"Kenel\",\n        stdNumber: \"15101729\",\n        phoneNum: \"01026916838\",\n        email: \"gw1741@kakao.com\",\n        birthday: \"931231\"\n      },\n      {\n        id: \"kimkim715\",\n        name: \"김주원\",\n        nickname: \"Ondedo\",\n        stdNumber: \"16101274\",\n        phoneNum: \"01077118537\",\n        email: \"kimkim715@gmail.com\",\n        birthday: \"980306\"\n      },\n      {\n        id: \"jjj391\",\n        name: \"전소율\",\n        nickname: \"Proich\",\n        stdNumber: \"16101037\",\n        phoneNum: \"01018883424\",\n        email: \"jjj391@ms.com\",\n        birthday: \"010214\"\n      },\n      {\n        id: \"yjs1013\",\n        name: \"윤지호\",\n        nickname: \"Casi\",\n        stdNumber: \"12101348\",\n        phoneNum: \"01024781216\",\n        email: \"yjs1013@naver.com\",\n        birthday: \"941129\"\n      },\n      {\n        id: \"ijh34879\",\n        name: \"임현우\",\n        nickname: \"Onogror\",\n        stdNumber: \"14101242\",\n        phoneNum: \"01084927342\",\n        email: \"ijh34879@baidu.com\",\n        birthday: \"960721\"\n      },\n      {\n        id: \"jackjack\",\n        name: \"고연우\",\n        nickname: \"Reryng\",\n        stdNumber: \"20101340\",\n        phoneNum: \"01083726493\",\n        email: \"isdjh879@gmail.com\",\n        birthday: \"970226\"\n      }\n    ],\n    page,\n    count: rowsPerPage,\n    total: 57\n  };\n\n  await apiCallStart();\n\n  await fetchHelper\n    .get(\n      `/admin/user/getall?limit=${rowsPerPage}&page=${page}&sort=${sort}`,\n      null,\n      apiResponse\n    )\n    .then(response => apiCallSuccess(response))\n    .catch(() => apiCallFailure());\n};\n\nexport default getUsers;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport UsersTable from \"../../../components/UsersTable/UsersTable\";\nimport LoadingSpinner from \"../../../components/LoadingSpinner/LoadingSpinner\";\nimport ErrorPage from \"../../Pages/ErrorPage/ErrorPage\";\nimport getUsers from \"./usersApi\";\n\nconst Users = props => {\n  const { history } = props;\n  const [users, setUsers] = useState([\n    {\n      id: \"\",\n      name: \"\",\n      nickname: \"\",\n      stdNumber: \"\",\n      phoneNum: \"\",\n      email: \"\",\n      birthday: \"\"\n    }\n  ]);\n  const [page, setPage] = useState(0);\n  const [count, setCount] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(0);\n  const [loadingState, setLoadingState] = useState(false);\n  const [error, setError] = useState(false);\n\n  const setLoadingStateAndErrorWhenApiCallStart = () => {\n    setLoadingState(true);\n    setError(false);\n  };\n\n  const setLoadingStateAndErrorWhenApiCallSuccess = response => {\n    setUsers([...response.users]);\n    setPage(response.page);\n    setCount(response.total);\n    setRowsPerPage(response.count);\n    setLoadingState(false);\n    setError(false);\n  };\n\n  const setLoadingStateAndErrorWhenApiCallFailure = () => {\n    setLoadingState(false);\n    setError(true);\n  };\n\n  const moveToUserPage = userId => {\n    history.push(`/user/${userId}`);\n  };\n\n  const handlePageChange = (event, newPage = 0) => {\n    getUsers({\n      page: newPage,\n      apiCallStart: setLoadingStateAndErrorWhenApiCallStart,\n      apiCallSuccess: setLoadingStateAndErrorWhenApiCallSuccess,\n      apiCallFailure: setLoadingStateAndErrorWhenApiCallFailure\n    });\n  };\n\n  // Component did mount\n  useEffect(handlePageChange, []);\n\n  return (\n    <div>\n      <div>Users</div>\n      <LoadingSpinner loadingState={loadingState}>\n        {error ? (\n          <ErrorPage />\n        ) : (\n          <UsersTable\n            data={users}\n            page={page}\n            count={count}\n            rowsPerPage={rowsPerPage}\n            moveToUserPage={moveToUserPage}\n            handlePageChange={handlePageChange}\n          />\n        )}\n      </LoadingSpinner>\n    </div>\n  );\n};\n\nUsers.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nexport default Users;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {\n  AccountCircle,\n  Face,\n  InsertEmoticon,\n  SupervisorAccount,\n  School,\n  MenuBook,\n  Phone,\n  Email,\n  Cake,\n  GroupAdd\n} from \"@material-ui/icons\";\n\nconst createUserInformationRow = (icon, dataName, data) => {\n  return { icon, dataName, data };\n};\n\nconst createTableRows = userInformation => [\n  createUserInformationRow(AccountCircle, \"ID\", userInformation.id),\n  createUserInformationRow(Face, \"Name\", userInformation.name),\n  createUserInformationRow(\n    InsertEmoticon,\n    \"Nickname\",\n    userInformation.nickname\n  ),\n  createUserInformationRow(SupervisorAccount, \"Role\", userInformation.role),\n  createUserInformationRow(School, \"Student Number\", userInformation.stdNumber),\n  createUserInformationRow(MenuBook, \"Major\", userInformation.major),\n  createUserInformationRow(Phone, \"Phone Number\", userInformation.phoneNum),\n  createUserInformationRow(Email, \"E-mail\", userInformation.email),\n  createUserInformationRow(Cake, \"Birthday\", userInformation.birthday),\n  createUserInformationRow(GroupAdd, \"Join date\", userInformation.createAt)\n];\n\nconst userInformationStyles = makeStyles(theme => ({\n  rootClassName: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    marginBottom: \"10px\"\n  },\n  buttonWrapperClassName: {\n    textAlign: \"right\"\n  }\n}));\n\nconst UserInformationList = props => {\n  const { rootClassName, buttonWrapperClassName } = userInformationStyles();\n  const {\n    userInformation,\n    selfIdentification,\n    userInformationEditPageUrl\n  } = props;\n  const tableRow = createTableRows(userInformation);\n\n  return (\n    <>\n      <List className={rootClassName}>\n        {tableRow.map(row => (\n          <Fragment key={row.dataName}>\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar>\n                  <row.icon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={row.dataName} secondary={row.data} />\n            </ListItem>\n            <Divider variant=\"inset\" component=\"li\" />\n          </Fragment>\n        ))}\n      </List>\n      {selfIdentification ? (\n        <div className={`edit-button-wrapper ${buttonWrapperClassName}`}>\n          <Button\n            className=\"edit-button-wrapper__edit-button\"\n            variant=\"contained\"\n            color=\"primary\"\n            component={Link}\n            to={userInformationEditPageUrl}\n          >\n            Edit\n          </Button>\n        </div>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nUserInformationList.propTypes = {\n  userInformation: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    nickname: PropTypes.string.isRequired,\n    role: PropTypes.string.isRequired,\n    stdNumber: PropTypes.string.isRequired,\n    major: PropTypes.string.isRequired,\n    phoneNum: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    birthday: PropTypes.string.isRequired,\n    createAt: PropTypes.string.isRequired\n  }).isRequired,\n  selfIdentification: PropTypes.bool.isRequired,\n  userInformationEditPageUrl: PropTypes.string.isRequired\n};\n\nexport default UserInformationList;\n","import fetchHelper from \"../../../helpers/fakeFetchHelper\";\n\nconst getUser = async ({\n  userId,\n  apiCallStart,\n  apiCallSuccess,\n  apiCallFailure\n}) => {\n  const apiResponse = {\n    success: true,\n    user: {\n      role: \"admin\",\n      id: userId,\n      name: \"강민준\",\n      nickname: \"Alianna\",\n      major: \"컴퓨터공학과\",\n      stdNumber: \"16101340\",\n      phoneNum: \"01020581720\",\n      email: \"kangji1610@naver.com\",\n      birthday: \"971226\",\n      createAt: \"200202\",\n      allow: []\n    }\n  };\n\n  await apiCallStart();\n\n  await fetchHelper\n    .get(`/user/${userId}`, null, apiResponse)\n    .then(response => apiCallSuccess(response))\n    .catch(() => apiCallFailure());\n};\n\nexport default getUser;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport UserInformationList from \"../../../components/UserInformationList/UserInformationList\";\nimport LoadingSpinner from \"../../../components/LoadingSpinner/LoadingSpinner\";\nimport ErrorPage from \"../../Pages/ErrorPage/ErrorPage\";\nimport getUser from \"./UserInformationApi\";\n\nconst UserInformation = props => {\n  const { myId, match } = props;\n  const { userId } = match.params;\n  const [userInformation, setUserInformation] = useState({\n    id: \"\",\n    name: \"\",\n    nickname: \"\",\n    role: \"\",\n    stdNumber: \"\",\n    phoneNum: \"\",\n    email: \"\",\n    major: \"\",\n    birthday: \"\",\n    createAt: \"\",\n    allow: []\n  });\n  const [selfIdentification, setSelfIdentification] = useState(false);\n  const [loadingState, setLoadingState] = useState(false);\n  const [error, setError] = useState(false);\n\n  const setLoadingStateAndErrorWhenApiCallStart = () => {\n    setLoadingState(true);\n    setError(false);\n  };\n\n  const setLoadingStateAndErrorWhenApiCallSuccess = response => {\n    setUserInformation(response.user);\n    // Check self identification for edit and delete button.\n    if (response.user.id === myId) setSelfIdentification(true);\n    setLoadingState(false);\n    setError(false);\n  };\n\n  const setLoadingStateAndErrorWhenApiCallFailure = () => {\n    setLoadingState(false);\n    setError(true);\n  };\n\n  const getUserInformation = () => {\n    getUser({\n      userId,\n      apiCallStart: setLoadingStateAndErrorWhenApiCallStart,\n      apiCallSuccess: setLoadingStateAndErrorWhenApiCallSuccess,\n      apiCallFailure: setLoadingStateAndErrorWhenApiCallFailure\n    });\n  };\n\n  useEffect(getUserInformation, []);\n\n  return (\n    <div>\n      <div>User information</div>\n      <LoadingSpinner loadingState={loadingState}>\n        {error ? (\n          <ErrorPage />\n        ) : (\n          <UserInformationList\n            userInformation={userInformation}\n            selfIdentification={selfIdentification}\n            userInformationEditPageUrl={`/user/${myId}/edit`}\n          />\n        )}\n      </LoadingSpinner>\n    </div>\n  );\n};\n\nUserInformation.propTypes = {\n  myId: PropTypes.string.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      userId: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\n\nconst mapStateToProps = state => {\n  const { auth } = state;\n  return { myId: auth.userId };\n};\n\nexport default connect(mapStateToProps)(UserInformation);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nimport NickNameValueInputBox from \"../InputBoxes/NickNameValueInputBox/NickNameValueInputBox\";\nimport EmailValueInputBox from \"../InputBoxes/EmailValueInputBox/EmailValueInputBox\";\nimport PhoneNumberValueInputBox from \"../InputBoxes/PhoneNumberValueInputBox/PhoneNumberValueInputBox\";\n\nconst userInformationEditFormStyles = makeStyles(() => ({\n  userInformationEditFormWrapperClassName: {\n    width: \"100%\",\n    marginBottom: \"20px\"\n  },\n  buttonWrapperClassName: {\n    textAlign: \"right\"\n  }\n}));\n\nconst UserInformationEditForm = props => {\n  const { userInformationData, handleSubmit } = props;\n  const {\n    userInformationEditFormWrapperClassName,\n    buttonWrapperClassName\n  } = userInformationEditFormStyles();\n\n  const handleUserInformationEditSubmit = event => {\n    // Prevent browers refresh.\n    event.preventDefault();\n    handleSubmit();\n  };\n\n  return (\n    <div className={`${userInformationEditFormWrapperClassName}`}>\n      <form onSubmit={handleUserInformationEditSubmit}>\n        <EmailValueInputBox\n          value={userInformationData.email.value}\n          setValue={userInformationData.email.setValue}\n          valueErrMessage={userInformationData.email.valueErrMessage}\n          setValueErrMessage={userInformationData.email.setValueErrMessage}\n        />\n        <NickNameValueInputBox\n          value={userInformationData.nickName.value}\n          setValue={userInformationData.nickName.setValue}\n          valueErrMessage={userInformationData.nickName.valueErrMessage}\n          setValueErrMessage={userInformationData.nickName.setValueErrMessage}\n        />\n        <PhoneNumberValueInputBox\n          value={userInformationData.phoneNum.value}\n          setValue={userInformationData.phoneNum.setValue}\n          valueErrMessage={userInformationData.phoneNum.valueErrMessage}\n          setValueErrMessage={userInformationData.phoneNum.setValueErrMessage}\n        />\n        <div className={buttonWrapperClassName}>\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            Information Edit\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nUserInformationEditForm.propTypes = {\n  userInformationData: PropTypes.shape({\n    allow: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired\n    }),\n    email: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired\n    }),\n    nickName: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired\n    }),\n    phoneNum: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired\n    })\n  }).isRequired,\n  handleSubmit: PropTypes.func.isRequired\n};\n\nexport default UserInformationEditForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nimport PasswordValueInputBox from \"../InputBoxes/PasswordValueInputBox/PasswordValueInputBox\";\nimport PasswordConfirmValueInputBox from \"../InputBoxes/PasswordConfirmValueInputBox/PasswordConfirmValueInputBox\";\n\nconst userPasswordEditFormStyles = makeStyles(() => ({\n  userPasswordEditFormWrapperClassName: {\n    width: \"100%\",\n    marginBottom: \"20px\"\n  },\n  buttonWrapperClassName: {\n    textAlign: \"right\"\n  }\n}));\n\nconst UserPasswordEditForm = props => {\n  const { userPasswordData, handleSubmit } = props;\n  const {\n    userPasswordEditFormWrapperClassName,\n    buttonWrapperClassName\n  } = userPasswordEditFormStyles();\n\n  const handleUserInformationEditSubmit = event => {\n    // Prevent browers refresh.\n    event.preventDefault();\n    handleSubmit();\n  };\n\n  return (\n    <div className={`${userPasswordEditFormWrapperClassName}`}>\n      <form onSubmit={handleUserInformationEditSubmit}>\n        <PasswordValueInputBox\n          label=\"Current password\"\n          value={userPasswordData.currentPassword.value}\n          setValue={userPasswordData.currentPassword.setValue}\n          valueErrMessage={userPasswordData.currentPassword.valueErrMessage}\n          setValueErrMessage={\n            userPasswordData.currentPassword.setValueErrMessage\n          }\n        />\n        <PasswordValueInputBox\n          label=\"New password\"\n          value={userPasswordData.newPassword.value}\n          setValue={userPasswordData.newPassword.setValue}\n          valueErrMessage={userPasswordData.newPassword.valueErrMessage}\n          setValueErrMessage={userPasswordData.newPassword.setValueErrMessage}\n          passwordConfirmValue={userPasswordData.newPassword.newPasswordConfirm}\n          setPasswordConfirmValueErrMessage={\n            userPasswordData.newPassword.setNewPasswordConfirmErrMessage\n          }\n        />\n        <PasswordConfirmValueInputBox\n          label=\"New password confirm\"\n          value={userPasswordData.newPasswordConfirm.value}\n          setValue={userPasswordData.newPasswordConfirm.setValue}\n          valueErrMessage={userPasswordData.newPasswordConfirm.valueErrMessage}\n          setValueErrMessage={\n            userPasswordData.newPasswordConfirm.setValueErrMessage\n          }\n          passwordValue={userPasswordData.newPasswordConfirm.newPassword}\n        />\n        <div className={buttonWrapperClassName}>\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            Password Edit\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nUserPasswordEditForm.propTypes = {\n  userPasswordData: PropTypes.shape({\n    currentPassword: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired\n    }),\n    newPassword: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired,\n      newPasswordConfirm: PropTypes.string.isRequired,\n      setNewPasswordConfirmErrMessage: PropTypes.func.isRequired\n    }),\n    newPasswordConfirm: PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      setValue: PropTypes.func.isRequired,\n      valueErrMessage: PropTypes.string.isRequired,\n      setValueErrMessage: PropTypes.func.isRequired,\n      newPassword: PropTypes.string.isRequired\n    })\n  }).isRequired,\n  handleSubmit: PropTypes.func.isRequired\n};\n\nexport default UserPasswordEditForm;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./UserWithdrawalForm.css\";\n\nconst userWithdrawalFormStyles = makeStyles(() => ({\n  userWithdrawalButtonTitle: {\n    textAlign: \"center\",\n    fontSize: \"2rem\",\n    color: \"red\"\n  },\n  userWithdrawalButtonWrapper: {\n    position: \"relative\",\n    margin: \"auto\",\n    marginTop: \"80px\",\n    marginBottom: \"100px\",\n    width: \"250px\",\n    height: \"80px\"\n  }\n}));\n\nconst UserWithdrawalForm = () => {\n  const {\n    userWithdrawalButtonTitle,\n    userWithdrawalButtonWrapper\n  } = userWithdrawalFormStyles();\n\n  return (\n    <>\n      <div className={userWithdrawalButtonTitle}>Withdrawal button</div>\n      <div className={userWithdrawalButtonWrapper}>\n        <div className=\"button\" />\n      </div>\n    </>\n  );\n};\n\nexport default UserWithdrawalForm;\n","import fetchHelper from \"../../../helpers/fakeFetchHelper\";\n\nexport const getUser = async ({\n  userId,\n  apiCallStart,\n  apiCallSuccess,\n  apiCallFailure\n}) => {\n  const apiResponse = {\n    success: true,\n    role: \"admin\",\n    id: userId,\n    name: \"Kang Ji Hoon\",\n    nickName: \"KangJi\",\n    major: \"Computer science and engineering\",\n    stdNumber: \"16101340\",\n    phoneNum: \"01001010101\",\n    email: \"kangkang@gmail.com\",\n    birthday: \"19971221\",\n    createAt: \"20200202\",\n    allow: \"allow\"\n  };\n\n  await apiCallStart();\n\n  await fetchHelper\n    .get(`/user/${userId}`, null, apiResponse)\n    .then(response => apiCallSuccess(response))\n    .catch(() => apiCallFailure());\n};\n\nexport const putUser = async ({\n  userId,\n  userInformation,\n  apiCallStart,\n  apiCallSuccess,\n  apiCallFailure\n}) => {\n  const apiResponse = { success: true };\n\n  await apiCallStart();\n\n  await fetchHelper\n    .put(`/user/${userId}`, userInformation, apiResponse)\n    .then(() => apiCallSuccess())\n    .catch(() => apiCallFailure());\n};\n\nexport const putUserPassword = async ({\n  userId,\n  curPassword,\n  newPassword,\n  apiCallStart,\n  apiCallSuccess,\n  apiCallFailure\n}) => {\n  const apiResponse = { success: true };\n\n  await apiCallStart();\n\n  await fetchHelper\n    .put(`/user/${userId}/password`, { curPassword, newPassword }, apiResponse)\n    .then(() => apiCallSuccess())\n    .catch(() => apiCallFailure());\n};\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport LoadingSpinner from \"../../../components/LoadingSpinner/LoadingSpinner\";\nimport ErrorPage from \"../../Pages/ErrorPage/ErrorPage\";\nimport UserInformationEditForm from \"../../../components/UserInformationEditForm/UserInformationEditForm\";\nimport UserPasswordEditForm from \"../../../components/UserPasswordEditForm/UserPasswordEditForm\";\nimport UserWithdrawalForm from \"../../../components/UserWithdrawalForm/UserWithdrawalForm\";\nimport * as userInformationEditApi from \"./UserInformationEditApi\";\n\nconst UserInformationEdit = ({\n  match: {\n    params: { userId }\n  }\n}) => {\n  const [allow, setAllow] = useState(\"\");\n  const [allowErrMessage, setAllowErrMessage] = useState(\"\");\n\n  const [email, setEmail] = useState(\"\");\n  const [eamilErrMessage, setEmailErrMessage] = useState(\"\");\n\n  const [nickName, setNickName] = useState(\"\");\n  const [nickNameErrMessage, setNickNameErrMessage] = useState(\"\");\n\n  const [phoneNum, setPhoneNum] = useState(\"\");\n  const [phoneNumErrMessage, setPhoneNumErrMessage] = useState(\"\");\n\n  const [currentPassword, setCurrentPassword] = useState(\"\");\n  const [currentPasswordErrMessage, setCurrentPasswordErrMessage] = useState(\n    \"\"\n  );\n\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [newPasswordErrMessage, setNewPasswordErrMessage] = useState(\"\");\n\n  const [newPasswordConfirm, setNewPasswordConfirm] = useState(\"\");\n  const [\n    newPasswordConfirmErrMessage,\n    setNewPasswordConfirmErrMessage\n  ] = useState(\"\");\n\n  const userInformationData = {\n    allow: {\n      value: allow,\n      setValue: setAllow,\n      valueErrMessage: allowErrMessage,\n      setValueErrMessage: setAllowErrMessage\n    },\n    email: {\n      value: email,\n      setValue: setEmail,\n      valueErrMessage: eamilErrMessage,\n      setValueErrMessage: setEmailErrMessage\n    },\n    nickName: {\n      value: nickName,\n      setValue: setNickName,\n      valueErrMessage: nickNameErrMessage,\n      setValueErrMessage: setNickNameErrMessage\n    },\n    phoneNum: {\n      value: phoneNum,\n      setValue: setPhoneNum,\n      valueErrMessage: phoneNumErrMessage,\n      setValueErrMessage: setPhoneNumErrMessage\n    }\n  };\n\n  const userPasswordData = {\n    currentPassword: {\n      value: currentPassword,\n      setValue: setCurrentPassword,\n      valueErrMessage: currentPasswordErrMessage,\n      setValueErrMessage: setCurrentPasswordErrMessage\n    },\n    newPassword: {\n      value: newPassword,\n      setValue: setNewPassword,\n      valueErrMessage: newPasswordErrMessage,\n      setValueErrMessage: setNewPasswordErrMessage,\n      newPasswordConfirm,\n      setNewPasswordConfirmErrMessage\n    },\n    newPasswordConfirm: {\n      value: newPasswordConfirm,\n      setValue: setNewPasswordConfirm,\n      valueErrMessage: newPasswordConfirmErrMessage,\n      setValueErrMessage: setNewPasswordConfirmErrMessage,\n      newPassword\n    }\n  };\n\n  const [loadingState, setLoadingState] = useState(false);\n  const [error, setError] = useState(false);\n\n  const setLoadingStateAndErrorWhenApiCallStart = () => {\n    setLoadingState(true);\n    setError(false);\n  };\n\n  const setLoadingStateAndErrorWhenApiCallSuccess = response => {\n    setAllow(response.allow);\n    setEmail(response.email);\n    setNickName(response.nickName);\n    setPhoneNum(response.phoneNum);\n    setLoadingState(false);\n    setError(false);\n  };\n\n  const setLoadingStateAndErrorWhenApiCallFailure = () => {\n    setLoadingState(false);\n    setError(true);\n  };\n\n  const getUserInformation = () => {\n    userInformationEditApi.getUser({\n      userId,\n      apiCallStart: setLoadingStateAndErrorWhenApiCallStart,\n      apiCallSuccess: setLoadingStateAndErrorWhenApiCallSuccess,\n      apiCallFailure: setLoadingStateAndErrorWhenApiCallFailure\n    });\n  };\n\n  const handleUserInformationEditSubmit = () => {\n    let err = false;\n\n    Object.keys(userInformationData).forEach(key => {\n      if (\n        userInformationData[key].value === \"\" ||\n        userInformationData[key].valueErrMessage\n      )\n        err = true;\n    });\n\n    if (!err) {\n      userInformationEditApi.putUser({\n        nickName: userInformationData.nickName.value,\n        email: userInformationData.email.value,\n        phoneNum: userInformationData.phoneNum.value,\n        allow: userInformationData.allow.value,\n        apiCallStart: setLoadingStateAndErrorWhenApiCallStart,\n        apiCallSuccess: getUserInformation,\n        apiCallFailure: setLoadingStateAndErrorWhenApiCallFailure\n      });\n    }\n  };\n\n  const handleUserPasswordEditSubmit = () => {\n    let err = false;\n\n    Object.keys(userPasswordData).forEach(key => {\n      if (\n        userPasswordData[key].value === \"\" ||\n        userPasswordData[key].valueErrMessage\n      )\n        err = true;\n    });\n\n    if (!err) {\n      userInformationEditApi.putUserPassword({\n        curPassword: userPasswordData.currentPassword.value,\n        newPassword: userPasswordData.newPassword.value,\n        apiCallStart: setLoadingStateAndErrorWhenApiCallStart,\n        apiCallSuccess: getUserInformation,\n        apiCallFailure: setLoadingStateAndErrorWhenApiCallFailure\n      });\n    }\n  };\n\n  useEffect(getUserInformation, []);\n\n  return (\n    <div>\n      <LoadingSpinner loadingState={loadingState}>\n        {error ? (\n          <ErrorPage />\n        ) : (\n          <>\n            <UserInformationEditForm\n              userInformationData={userInformationData}\n              handleSubmit={handleUserInformationEditSubmit}\n            />\n            <UserPasswordEditForm\n              userPasswordData={userPasswordData}\n              handleSubmit={handleUserPasswordEditSubmit}\n            />\n            <UserWithdrawalForm />\n          </>\n        )}\n      </LoadingSpinner>\n    </div>\n  );\n};\n\nUserInformationEdit.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      userId: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\n\nexport default UserInformationEdit;\n","import React from \"react\";\n\nconst ErrorPage404 = () => <div>404</div>;\n\nexport default ErrorPage404;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as authActions from \"./redux/auth/actions\";\nimport checkSignIn from \"./redux/checkSignIn\";\nimport ScrollOnTopHelper from \"./helpers/scrollOnTopHelper\";\n\nimport SignIn from \"./containers/SignIn/SignIn\";\nimport SignUp from \"./containers/SignUp/SignUp\";\nimport Header from \"./components/Header/Header\";\nimport Main from \"./containers/Main/Main\";\nimport Projects from \"./containers/Project/Projects/Projects\";\nimport ProjectEdit from \"./containers/Project/ProjectEdit/ProjectEdit\";\nimport Project from \"./containers/Project/Project/Project\";\nimport Exams from \"./containers/Exam/Exams/Exams\";\nimport ExamEdit from \"./containers/Exam/ExamEdit/ExamEdit\";\nimport Exam from \"./containers/Exam/Exam/Exam\";\nimport JoinRequests from \"./containers/Admin/JoinRequests/JoinRequests\";\nimport Users from \"./containers/Admin/Users/Users\";\nimport UserInformation from \"./containers/UserInformation/UserInformation/UserInformation\";\nimport UserInformationEdit from \"./containers/UserInformation/UserInformationEdit/UserInformationEdit\";\nimport ErrorPage404 from \"./containers/Pages/404Page/404Page\";\n\nconst PublicRouter = () => (\n  <Switch>\n    {/* Sign in page */}\n    <Route exact path=\"/\" component={SignIn} />\n    <Route exact path=\"/signin\" component={SignIn} />\n    {/* Sign up page */}\n    <Route exact path=\"/signup\" component={SignUp} />\n    {/* 404 Error page */}\n    <Route component={ErrorPage404} />\n  </Switch>\n);\n\nconst PrivateRouter = ({ signOut, userId, role }) => (\n  <Header signOut={signOut} userId={userId} role={role}>\n    <Switch>\n      {/* Main page */}\n      <Route exact path=\"/\" component={Main} />\n      <Route exact path=\"/main\" component={Main} />\n      {/* Project page */}\n      <Route exact path=\"/project/projects\" component={Projects} />\n      <Route exact path=\"/project/project/create\" component={ProjectEdit} />\n      <Route exact path=\"/project/project/:projectId\" component={Project} />\n      <Route\n        exact\n        path=\"/project/project/:projectId/edit\"\n        component={ProjectEdit}\n      />\n      {/* Exam page */}\n      <Route exact path=\"/exam/exams\" component={Exams} />\n      <Route exact path=\"/exam/exam/create\" component={ExamEdit} />\n      <Route exact path=\"/exam/exam/:examId\" component={Exam} />\n      <Route exact path=\"/exam/exam/:examId/edit\" component={ExamEdit} />\n      {/* Admin page */}\n      <Route exact path=\"/admin/joinrequests\" component={JoinRequests} />\n      <Route exact path=\"/admin/users\" component={Users} />\n      {/* User information page */}\n      <Route exact path=\"/user/:userId\" component={UserInformation} />\n      <Route exact path=\"/user/:userId/edit\" component={UserInformationEdit} />\n      {/* 404 Error page */}\n      <Route component={ErrorPage404} />\n    </Switch>\n  </Header>\n);\n\nconst AppRouter = props => {\n  const { isSignIn, signOut, userId, role } = props;\n  return (\n    <Router>\n      <ScrollOnTopHelper />\n      <Switch>\n        <RouterSelectorComponent\n          isSignIn={isSignIn}\n          signOut={signOut}\n          userId={userId}\n          role={role}\n        />\n      </Switch>\n    </Router>\n  );\n};\n\nAppRouter.propTypes = {\n  isSignIn: PropTypes.bool.isRequired\n};\n\nconst RouterSelectorComponent = props => {\n  const { isSignIn, location, signOut, userId, role } = props;\n\n  checkSignIn();\n\n  if (isSignIn === true) {\n    if (location.pathname === \"/signin\") return <Redirect to=\"main\" />;\n\n    return <PrivateRouter signOut={signOut} userId={userId} role={role} />;\n  }\n\n  return <PublicRouter />;\n};\n\nPrivateRouter.propTypes = {\n  signOut: PropTypes.func.isRequired,\n  userId: PropTypes.string.isRequired,\n  role: PropTypes.string.isRequired\n};\n\nAppRouter.propTypes = {\n  signOut: PropTypes.func.isRequired,\n  userId: PropTypes.string.isRequired,\n  role: PropTypes.string.isRequired\n};\n\nRouterSelectorComponent.propTypes = {\n  isSignIn: PropTypes.bool.isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string\n  }),\n  signOut: PropTypes.func.isRequired,\n  userId: PropTypes.string.isRequired,\n  role: PropTypes.string.isRequired\n};\n\nRouterSelectorComponent.defaultProps = {\n  location: {\n    pathName: \"/\"\n  }\n};\n\nconst mapStateToProps = state => {\n  const { auth } = state;\n  return { isSignIn: auth.isSignIn, userId: auth.userId, role: auth.role };\n};\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(authActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppRouter);\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport Router from \"./router\";\n\nconst App = () => (\n  <Provider store={store}>\n    <Router />\n  </Provider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n// index.css is reset CSS.\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}